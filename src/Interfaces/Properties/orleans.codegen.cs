//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace Cloudrocket.Interfaces
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using Cloudrocket.Interfaces;
    using Cloudrocket.AvaTax;
    using PayPal.Api;
    using Orleans;
    using Orleans.Runtime;
    using System.Collections;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GrainOrderFactory
    {
        

                        public static Cloudrocket.Interfaces.IGrainOrder GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IGrainOrder), -1058994003, primaryKey));
                        }

                        public static Cloudrocket.Interfaces.IGrainOrder GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IGrainOrder), -1058994003, primaryKey, grainClassNamePrefix));
                        }

            public static Cloudrocket.Interfaces.IGrainOrder Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GrainOrderReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IGrainOrder")]
        internal class GrainOrderReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Cloudrocket.Interfaces.IGrainOrder
        {
            

            public static Cloudrocket.Interfaces.IGrainOrder Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Cloudrocket.Interfaces.IGrainOrder) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Cloudrocket.Interfaces.IGrainOrder), (global::Orleans.Runtime.GrainReference gr) => { return new GrainOrderReference(gr);}, grainRef, -1058994003);
            }
            
            protected internal GrainOrderReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GrainOrderReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1058994003;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Cloudrocket.Interfaces.Cloudrocket.Interfaces.IGrainOrder";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GrainOrderReference input = ((GrainOrderReference)(original));
                return ((GrainOrderReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GrainOrderReference input = ((GrainOrderReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GrainOrderReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1097320095));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GrainOrderMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Cloudrocket.Interfaces.IGrainOrder.GetPaymentInfo(Cloudrocket.Interfaces.Cart @cart)
            {

                return base.InvokeMethodAsync<object>(-345167685, new object[] {@cart} );
            }
            
            System.Threading.Tasks.Task Cloudrocket.Interfaces.IGrainOrder.ApproveOrder()
            {

                return base.InvokeMethodAsync<object>(339864652, new object[] {} );
            }
            
            System.Threading.Tasks.Task Cloudrocket.Interfaces.IGrainOrder.ProcessPayment()
            {

                return base.InvokeMethodAsync<object>(-307824175, new object[] {} );
            }
            
            System.Threading.Tasks.Task Cloudrocket.Interfaces.IGrainOrder.ConfirmOrder()
            {

                return base.InvokeMethodAsync<object>(-75674932, new object[] {} );
            }
            
            System.Threading.Tasks.Task Cloudrocket.Interfaces.IGrainOrder.LogOrderToCrm()
            {

                return base.InvokeMethodAsync<object>(-1533586194, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IGrainOrder", -1058994003)]
    internal class GrainOrderMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1058994003;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1058994003:  // IGrainOrder
                        switch (methodId)
                        {
                            case -345167685: 
                                return ((IGrainOrder)grain).GetPaymentInfo((Cart)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 339864652: 
                                return ((IGrainOrder)grain).ApproveOrder().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -307824175: 
                                return ((IGrainOrder)grain).ProcessPayment().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -75674932: 
                                return ((IGrainOrder)grain).ConfirmOrder().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case -1533586194: 
                                return ((IGrainOrder)grain).LogOrderToCrm().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1097320095:  // IGrainWithGuidKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1058994003:  // IGrainOrder
                    switch (methodId)
                    {
                        case -345167685:
                            return "GetPaymentInfo";
                    case 339864652:
                            return "ApproveOrder";
                    case -307824175:
                            return "ProcessPayment";
                    case -75674932:
                            return "ConfirmOrder";
                    case -1533586194:
                            return "LogOrderToCrm";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1097320095:  // IGrainWithGuidKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GrainPaymentTransactionFactory
    {
        

                        public static Cloudrocket.Interfaces.IGrainPaymentTransaction GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IGrainPaymentTransaction), -1409714613, primaryKey));
                        }

                        public static Cloudrocket.Interfaces.IGrainPaymentTransaction GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IGrainPaymentTransaction), -1409714613, primaryKey, grainClassNamePrefix));
                        }

            public static Cloudrocket.Interfaces.IGrainPaymentTransaction Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GrainPaymentTransactionReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IGrainPaymentTransaction")]
        internal class GrainPaymentTransactionReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Cloudrocket.Interfaces.IGrainPaymentTransaction
        {
            

            public static Cloudrocket.Interfaces.IGrainPaymentTransaction Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Cloudrocket.Interfaces.IGrainPaymentTransaction) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Cloudrocket.Interfaces.IGrainPaymentTransaction), (global::Orleans.Runtime.GrainReference gr) => { return new GrainPaymentTransactionReference(gr);}, grainRef, -1409714613);
            }
            
            protected internal GrainPaymentTransactionReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GrainPaymentTransactionReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1409714613;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Cloudrocket.Interfaces.Cloudrocket.Interfaces.IGrainPaymentTransaction";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GrainPaymentTransactionReference input = ((GrainPaymentTransactionReference)(original));
                return ((GrainPaymentTransactionReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GrainPaymentTransactionReference input = ((GrainPaymentTransactionReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GrainPaymentTransactionReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1097320095));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GrainPaymentTransactionMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<Cloudrocket.Interfaces.Purchase> Cloudrocket.Interfaces.IGrainPaymentTransaction.ChargeAsync(Cloudrocket.Interfaces.PaymentTransaction @paymentTransaction)
            {

                return base.InvokeMethodAsync<Cloudrocket.Interfaces.Purchase>(1990113424, new object[] {@paymentTransaction} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IGrainPaymentTransaction", -1409714613)]
    internal class GrainPaymentTransactionMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1409714613;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1409714613:  // IGrainPaymentTransaction
                        switch (methodId)
                        {
                            case 1990113424: 
                                return ((IGrainPaymentTransaction)grain).ChargeAsync((PaymentTransaction)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1097320095:  // IGrainWithGuidKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1409714613:  // IGrainPaymentTransaction
                    switch (methodId)
                    {
                        case 1990113424:
                            return "ChargeAsync";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1097320095:  // IGrainWithGuidKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GrainPurchaseFactory
    {
        

                        public static Cloudrocket.Interfaces.IGrainPurchase GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IGrainPurchase), -918744027, primaryKey));
                        }

                        public static Cloudrocket.Interfaces.IGrainPurchase GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IGrainPurchase), -918744027, primaryKey, grainClassNamePrefix));
                        }

            public static Cloudrocket.Interfaces.IGrainPurchase Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GrainPurchaseReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IGrainPurchase")]
        internal class GrainPurchaseReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Cloudrocket.Interfaces.IGrainPurchase
        {
            

            public static Cloudrocket.Interfaces.IGrainPurchase Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Cloudrocket.Interfaces.IGrainPurchase) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Cloudrocket.Interfaces.IGrainPurchase), (global::Orleans.Runtime.GrainReference gr) => { return new GrainPurchaseReference(gr);}, grainRef, -918744027);
            }
            
            protected internal GrainPurchaseReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GrainPurchaseReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -918744027;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Cloudrocket.Interfaces.Cloudrocket.Interfaces.IGrainPurchase";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GrainPurchaseReference input = ((GrainPurchaseReference)(original));
                return ((GrainPurchaseReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GrainPurchaseReference input = ((GrainPurchaseReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GrainPurchaseReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1097320095));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GrainPurchaseMethodInvoker.GetMethodName(interfaceId, methodId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IGrainPurchase", -918744027)]
    internal class GrainPurchaseMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -918744027;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -918744027:  // IGrainPurchase
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1097320095:  // IGrainWithGuidKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -918744027:  // IGrainPurchase
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1097320095:  // IGrainWithGuidKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ServiceGrainAvalaraFactory
    {
        

                        public static Cloudrocket.Interfaces.IServiceGrainAvalara GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IServiceGrainAvalara), -293651562, primaryKey));
                        }

                        public static Cloudrocket.Interfaces.IServiceGrainAvalara GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IServiceGrainAvalara), -293651562, primaryKey, grainClassNamePrefix));
                        }

            public static Cloudrocket.Interfaces.IServiceGrainAvalara Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ServiceGrainAvalaraReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IServiceGrainAvalara")]
        internal class ServiceGrainAvalaraReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Cloudrocket.Interfaces.IServiceGrainAvalara
        {
            

            public static Cloudrocket.Interfaces.IServiceGrainAvalara Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Cloudrocket.Interfaces.IServiceGrainAvalara) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Cloudrocket.Interfaces.IServiceGrainAvalara), (global::Orleans.Runtime.GrainReference gr) => { return new ServiceGrainAvalaraReference(gr);}, grainRef, -293651562);
            }
            
            protected internal ServiceGrainAvalaraReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ServiceGrainAvalaraReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -293651562;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Cloudrocket.Interfaces.Cloudrocket.Interfaces.IServiceGrainAvalara";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ServiceGrainAvalaraReference input = ((ServiceGrainAvalaraReference)(original));
                return ((ServiceGrainAvalaraReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ServiceGrainAvalaraReference input = ((ServiceGrainAvalaraReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ServiceGrainAvalaraReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ServiceGrainAvalaraMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<Cloudrocket.AvaTax.CancelTaxResult> Cloudrocket.Interfaces.IServiceGrainAvalara.CancelTax(Cloudrocket.AvaTax.CancelTaxRequest @cancelTaxRequest)
            {

                return base.InvokeMethodAsync<Cloudrocket.AvaTax.CancelTaxResult>(-1052426443, new object[] {@cancelTaxRequest} );
            }
            
            System.Threading.Tasks.Task<Cloudrocket.AvaTax.GetTaxResult> Cloudrocket.Interfaces.IServiceGrainAvalara.GetTax(Cloudrocket.AvaTax.GetTaxRequest @taxRequest)
            {

                return base.InvokeMethodAsync<Cloudrocket.AvaTax.GetTaxResult>(1715079607, new object[] {@taxRequest} );
            }
            
            System.Threading.Tasks.Task<Cloudrocket.AvaTax.GeoTaxResult> Cloudrocket.Interfaces.IServiceGrainAvalara.GetTaxEstimate(string @productTaxCode, decimal @amount, decimal @latitude, decimal @longitude)
            {

                return base.InvokeMethodAsync<Cloudrocket.AvaTax.GeoTaxResult>(-1885375954, new object[] {@productTaxCode, @amount, @latitude, @longitude} );
            }
            
            System.Threading.Tasks.Task<bool> Cloudrocket.Interfaces.IServiceGrainAvalara.PingTax()
            {

                return base.InvokeMethodAsync<System.Boolean>(-2092026840, new object[] {} );
            }
            
            System.Threading.Tasks.Task<Cloudrocket.AvaTax.ValidateResult> Cloudrocket.Interfaces.IServiceGrainAvalara.ValidateAddress(Cloudrocket.AvaTax.LocationAddress @addressToValidate)
            {

                return base.InvokeMethodAsync<Cloudrocket.AvaTax.ValidateResult>(233961767, new object[] {@addressToValidate} );
            }
            
            System.Threading.Tasks.Task Cloudrocket.Interfaces.IServiceGrainAvalara.ClearStateAsync()
            {

                return base.InvokeMethodAsync<object>(371224422, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IServiceGrainAvalara", -293651562)]
    internal class ServiceGrainAvalaraMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -293651562;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -293651562:  // IServiceGrainAvalara
                        switch (methodId)
                        {
                            case -1052426443: 
                                return ((IServiceGrainAvalara)grain).CancelTax((Cloudrocket.AvaTax.CancelTaxRequest)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1715079607: 
                                return ((IServiceGrainAvalara)grain).GetTax((Cloudrocket.AvaTax.GetTaxRequest)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1885375954: 
                                return ((IServiceGrainAvalara)grain).GetTaxEstimate((String)arguments[0], (Decimal)arguments[1], (Decimal)arguments[2], (Decimal)arguments[3]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -2092026840: 
                                return ((IServiceGrainAvalara)grain).PingTax().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 233961767: 
                                return ((IServiceGrainAvalara)grain).ValidateAddress((Cloudrocket.AvaTax.LocationAddress)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 371224422: 
                                return ((IServiceGrainAvalara)grain).ClearStateAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -293651562:  // IServiceGrainAvalara
                    switch (methodId)
                    {
                        case -1052426443:
                            return "CancelTax";
                    case 1715079607:
                            return "GetTax";
                    case -1885375954:
                            return "GetTaxEstimate";
                    case -2092026840:
                            return "PingTax";
                    case 233961767:
                            return "ValidateAddress";
                    case 371224422:
                            return "ClearStateAsync";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ServiceGrainBingLocationFactory
    {
        

                        public static Cloudrocket.Interfaces.IServiceGrainBingLocation GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IServiceGrainBingLocation), 704816994, primaryKey));
                        }

                        public static Cloudrocket.Interfaces.IServiceGrainBingLocation GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IServiceGrainBingLocation), 704816994, primaryKey, grainClassNamePrefix));
                        }

            public static Cloudrocket.Interfaces.IServiceGrainBingLocation Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ServiceGrainBingLocationReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IServiceGrainBingLocation")]
        internal class ServiceGrainBingLocationReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Cloudrocket.Interfaces.IServiceGrainBingLocation
        {
            

            public static Cloudrocket.Interfaces.IServiceGrainBingLocation Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Cloudrocket.Interfaces.IServiceGrainBingLocation) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Cloudrocket.Interfaces.IServiceGrainBingLocation), (global::Orleans.Runtime.GrainReference gr) => { return new ServiceGrainBingLocationReference(gr);}, grainRef, 704816994);
            }
            
            protected internal ServiceGrainBingLocationReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ServiceGrainBingLocationReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return 704816994;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Cloudrocket.Interfaces.Cloudrocket.Interfaces.IServiceGrainBingLocation";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ServiceGrainBingLocationReference input = ((ServiceGrainBingLocationReference)(original));
                return ((ServiceGrainBingLocationReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ServiceGrainBingLocationReference input = ((ServiceGrainBingLocationReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ServiceGrainBingLocationReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1097320095));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ServiceGrainBingLocationMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<Cloudrocket.Interfaces.GeoLocation> Cloudrocket.Interfaces.IServiceGrainBingLocation.GetGeocodeAsync(string @addressLine, string @locality, string @adminDistrict, string @postalCode, string @countryRegion)
            {

                return base.InvokeMethodAsync<Cloudrocket.Interfaces.GeoLocation>(-1714847634, new object[] {@addressLine, @locality, @adminDistrict, @postalCode, @countryRegion} );
            }
            
            System.Threading.Tasks.Task<Cloudrocket.Interfaces.GeoLocation> Cloudrocket.Interfaces.IServiceGrainBingLocation.GetGeocodeAsync(Cloudrocket.Interfaces.GeoLocation @geoLocation)
            {

                return base.InvokeMethodAsync<Cloudrocket.Interfaces.GeoLocation>(-1427000644, new object[] {@geoLocation} );
            }
            
            System.Threading.Tasks.Task<Cloudrocket.Interfaces.GeoLocation> Cloudrocket.Interfaces.IServiceGrainBingLocation.GetGeocodeAsync()
            {

                return base.InvokeMethodAsync<Cloudrocket.Interfaces.GeoLocation>(1960376986, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IServiceGrainBingLocation", 704816994)]
    internal class ServiceGrainBingLocationMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return 704816994;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 704816994:  // IServiceGrainBingLocation
                        switch (methodId)
                        {
                            case -1714847634: 
                                return ((IServiceGrainBingLocation)grain).GetGeocodeAsync((String)arguments[0], (String)arguments[1], (String)arguments[2], (String)arguments[3], (String)arguments[4]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -1427000644: 
                                return ((IServiceGrainBingLocation)grain).GetGeocodeAsync((GeoLocation)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1960376986: 
                                return ((IServiceGrainBingLocation)grain).GetGeocodeAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1097320095:  // IGrainWithGuidKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 704816994:  // IServiceGrainBingLocation
                    switch (methodId)
                    {
                        case -1714847634:
                            return "GetGeocodeAsync";
                    case -1427000644:
                            return "GetGeocodeAsync";
                    case 1960376986:
                            return "GetGeocodeAsync";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1097320095:  // IGrainWithGuidKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ServiceGrainPayPalFactory
    {
        

                        public static Cloudrocket.Interfaces.IServiceGrainPayPal GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IServiceGrainPayPal), -894604425, primaryKey));
                        }

                        public static Cloudrocket.Interfaces.IServiceGrainPayPal GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IServiceGrainPayPal), -894604425, primaryKey, grainClassNamePrefix));
                        }

            public static Cloudrocket.Interfaces.IServiceGrainPayPal Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ServiceGrainPayPalReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IServiceGrainPayPal")]
        internal class ServiceGrainPayPalReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Cloudrocket.Interfaces.IServiceGrainPayPal
        {
            

            public static Cloudrocket.Interfaces.IServiceGrainPayPal Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Cloudrocket.Interfaces.IServiceGrainPayPal) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Cloudrocket.Interfaces.IServiceGrainPayPal), (global::Orleans.Runtime.GrainReference gr) => { return new ServiceGrainPayPalReference(gr);}, grainRef, -894604425);
            }
            
            protected internal ServiceGrainPayPalReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ServiceGrainPayPalReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -894604425;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Cloudrocket.Interfaces.Cloudrocket.Interfaces.IServiceGrainPayPal";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ServiceGrainPayPalReference input = ((ServiceGrainPayPalReference)(original));
                return ((ServiceGrainPayPalReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ServiceGrainPayPalReference input = ((ServiceGrainPayPalReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ServiceGrainPayPalReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1097320095));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ServiceGrainPayPalMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<PayPal.Api.APIContext> Cloudrocket.Interfaces.IServiceGrainPayPal.GetPayPalApiContextAsync(string @requestId)
            {

                return base.InvokeMethodAsync<PayPal.Api.APIContext>(2037223797, new object[] {@requestId} );
            }
            
            System.Threading.Tasks.Task<PayPal.Api.Payment> Cloudrocket.Interfaces.IServiceGrainPayPal.GetPayPalPaymentAsync(Cloudrocket.Interfaces.Order @order, Cloudrocket.Interfaces.Card @card, string @requestId)
            {

                return base.InvokeMethodAsync<PayPal.Api.Payment>(-796246951, new object[] {@order, @card, @requestId} );
            }
            
            System.Threading.Tasks.Task Cloudrocket.Interfaces.IServiceGrainPayPal.ClearStateAsync()
            {

                return base.InvokeMethodAsync<object>(371224422, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IServiceGrainPayPal", -894604425)]
    internal class ServiceGrainPayPalMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -894604425;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -894604425:  // IServiceGrainPayPal
                        switch (methodId)
                        {
                            case 2037223797: 
                                return ((IServiceGrainPayPal)grain).GetPayPalApiContextAsync((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case -796246951: 
                                return ((IServiceGrainPayPal)grain).GetPayPalPaymentAsync((Order)arguments[0], (Card)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 371224422: 
                                return ((IServiceGrainPayPal)grain).ClearStateAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1097320095:  // IGrainWithGuidKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -894604425:  // IServiceGrainPayPal
                    switch (methodId)
                    {
                        case 2037223797:
                            return "GetPayPalApiContextAsync";
                    case -796246951:
                            return "GetPayPalPaymentAsync";
                    case 371224422:
                            return "ClearStateAsync";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1097320095:  // IGrainWithGuidKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ServiceGrainPayPalConfigurationFactory
    {
        

                        public static Cloudrocket.Interfaces.IServiceGrainPayPalConfiguration GetGrain(System.String primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IServiceGrainPayPalConfiguration), -1673139317, primaryKey));
                        }

                        public static Cloudrocket.Interfaces.IServiceGrainPayPalConfiguration GetGrain(System.String primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IServiceGrainPayPalConfiguration), -1673139317, primaryKey, grainClassNamePrefix));
                        }

            public static Cloudrocket.Interfaces.IServiceGrainPayPalConfiguration Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ServiceGrainPayPalConfigurationReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IServiceGrainPayPalConfiguration")]
        internal class ServiceGrainPayPalConfigurationReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Cloudrocket.Interfaces.IServiceGrainPayPalConfiguration
        {
            

            public static Cloudrocket.Interfaces.IServiceGrainPayPalConfiguration Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Cloudrocket.Interfaces.IServiceGrainPayPalConfiguration) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Cloudrocket.Interfaces.IServiceGrainPayPalConfiguration), (global::Orleans.Runtime.GrainReference gr) => { return new ServiceGrainPayPalConfigurationReference(gr);}, grainRef, -1673139317);
            }
            
            protected internal ServiceGrainPayPalConfigurationReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ServiceGrainPayPalConfigurationReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1673139317;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Cloudrocket.Interfaces.Cloudrocket.Interfaces.IServiceGrainPayPalConfiguration";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ServiceGrainPayPalConfigurationReference input = ((ServiceGrainPayPalConfigurationReference)(original));
                return ((ServiceGrainPayPalConfigurationReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ServiceGrainPayPalConfigurationReference input = ((ServiceGrainPayPalConfigurationReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ServiceGrainPayPalConfigurationReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1277021679));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ServiceGrainPayPalConfigurationMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>> Cloudrocket.Interfaces.IServiceGrainPayPalConfiguration.GetPayPalConfigurationAsync()
            {

                return base.InvokeMethodAsync<System.Collections.Generic.Dictionary<System.String,System.String>>(230363276, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IServiceGrainPayPalConfiguration", -1673139317)]
    internal class ServiceGrainPayPalConfigurationMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1673139317;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1673139317:  // IServiceGrainPayPalConfiguration
                        switch (methodId)
                        {
                            case 230363276: 
                                return ((IServiceGrainPayPalConfiguration)grain).GetPayPalConfigurationAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1277021679:  // IGrainWithStringKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1673139317:  // IServiceGrainPayPalConfiguration
                    switch (methodId)
                    {
                        case 230363276:
                            return "GetPayPalConfigurationAsync";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1277021679:  // IGrainWithStringKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ServiceGrainSendGridFactory
    {
        

                        public static Cloudrocket.Interfaces.IServiceGrainSendGrid GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IServiceGrainSendGrid), -1447722677, primaryKey));
                        }

                        public static Cloudrocket.Interfaces.IServiceGrainSendGrid GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IServiceGrainSendGrid), -1447722677, primaryKey, grainClassNamePrefix));
                        }

            public static Cloudrocket.Interfaces.IServiceGrainSendGrid Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ServiceGrainSendGridReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IServiceGrainSendGrid")]
        internal class ServiceGrainSendGridReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Cloudrocket.Interfaces.IServiceGrainSendGrid
        {
            

            public static Cloudrocket.Interfaces.IServiceGrainSendGrid Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Cloudrocket.Interfaces.IServiceGrainSendGrid) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Cloudrocket.Interfaces.IServiceGrainSendGrid), (global::Orleans.Runtime.GrainReference gr) => { return new ServiceGrainSendGridReference(gr);}, grainRef, -1447722677);
            }
            
            protected internal ServiceGrainSendGridReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ServiceGrainSendGridReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1447722677;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Cloudrocket.Interfaces.Cloudrocket.Interfaces.IServiceGrainSendGrid";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ServiceGrainSendGridReference input = ((ServiceGrainSendGridReference)(original));
                return ((ServiceGrainSendGridReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ServiceGrainSendGridReference input = ((ServiceGrainSendGridReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ServiceGrainSendGridReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1097320095));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ServiceGrainSendGridMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task Cloudrocket.Interfaces.IServiceGrainSendGrid.SendEmail(Cloudrocket.Interfaces.EmailMessage @messsage)
            {

                return base.InvokeMethodAsync<object>(-618082486, new object[] {@messsage} );
            }
            
            System.Threading.Tasks.Task Cloudrocket.Interfaces.IServiceGrainSendGrid.SendTestEmail(string @_subjectText, string @_messageBodyText, string @_messageBodyHtml)
            {

                return base.InvokeMethodAsync<object>(906660269, new object[] {@_subjectText, @_messageBodyText, @_messageBodyHtml} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IServiceGrainSendGrid", -1447722677)]
    internal class ServiceGrainSendGridMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1447722677;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1447722677:  // IServiceGrainSendGrid
                        switch (methodId)
                        {
                            case -618082486: 
                                return ((IServiceGrainSendGrid)grain).SendEmail((EmailMessage)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            case 906660269: 
                                return ((IServiceGrainSendGrid)grain).SendTestEmail((String)arguments[0], (String)arguments[1], (String)arguments[2]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1097320095:  // IGrainWithGuidKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1447722677:  // IServiceGrainSendGrid
                    switch (methodId)
                    {
                        case -618082486:
                            return "SendEmail";
                    case 906660269:
                            return "SendTestEmail";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1097320095:  // IGrainWithGuidKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class GrainCartFactory
    {
        

                        public static Cloudrocket.Interfaces.IGrainCart GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IGrainCart), -195282779, primaryKey));
                        }

                        public static Cloudrocket.Interfaces.IGrainCart GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IGrainCart), -195282779, primaryKey, grainClassNamePrefix));
                        }

            public static Cloudrocket.Interfaces.IGrainCart Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return GrainCartReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IGrainCart")]
        internal class GrainCartReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Cloudrocket.Interfaces.IGrainCart
        {
            

            public static Cloudrocket.Interfaces.IGrainCart Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Cloudrocket.Interfaces.IGrainCart) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Cloudrocket.Interfaces.IGrainCart), (global::Orleans.Runtime.GrainReference gr) => { return new GrainCartReference(gr);}, grainRef, -195282779);
            }
            
            protected internal GrainCartReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal GrainCartReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -195282779;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Cloudrocket.Interfaces.Cloudrocket.Interfaces.IGrainCart";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                GrainCartReference input = ((GrainCartReference)(original));
                return ((GrainCartReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                GrainCartReference input = ((GrainCartReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return GrainCartReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return ((interfaceId == this.InterfaceId) 
                            || (interfaceId == -1097320095));
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return GrainCartMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<Cloudrocket.Interfaces.Cart> Cloudrocket.Interfaces.IGrainCart.AddCartItemAsync(Cloudrocket.Interfaces.CartItem @cartItem)
            {

                return base.InvokeMethodAsync<Cloudrocket.Interfaces.Cart>(780187644, new object[] {@cartItem} );
            }
            
            System.Threading.Tasks.Task<Cloudrocket.Interfaces.Cart> Cloudrocket.Interfaces.IGrainCart.RemoveCartItemAsync(Cloudrocket.Interfaces.CartItem @cartItem)
            {

                return base.InvokeMethodAsync<Cloudrocket.Interfaces.Cart>(1937130587, new object[] {@cartItem} );
            }
            
            System.Threading.Tasks.Task<Cloudrocket.Interfaces.Cart> Cloudrocket.Interfaces.IGrainCart.GetCartAsync()
            {

                return base.InvokeMethodAsync<Cloudrocket.Interfaces.Cart>(1843508608, new object[] {} );
            }
            
            System.Threading.Tasks.Task<Cloudrocket.Interfaces.Cart> Cloudrocket.Interfaces.IGrainCart.UpdateCartAsync()
            {

                return base.InvokeMethodAsync<Cloudrocket.Interfaces.Cart>(2108903392, new object[] {} );
            }
            
            System.Threading.Tasks.Task Cloudrocket.Interfaces.IGrainCart.ClearStateAsync()
            {

                return base.InvokeMethodAsync<object>(371224422, new object[] {} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IGrainCart", -195282779)]
    internal class GrainCartMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -195282779;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -195282779:  // IGrainCart
                        switch (methodId)
                        {
                            case 780187644: 
                                return ((IGrainCart)grain).AddCartItemAsync((CartItem)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1937130587: 
                                return ((IGrainCart)grain).RemoveCartItemAsync((CartItem)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 1843508608: 
                                return ((IGrainCart)grain).GetCartAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 2108903392: 
                                return ((IGrainCart)grain).UpdateCartAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            case 371224422: 
                                return ((IGrainCart)grain).ClearStateAsync().ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)null; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }case -1097320095:  // IGrainWithGuidKey
                        switch (methodId)
                        {
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -195282779:  // IGrainCart
                    switch (methodId)
                    {
                        case 780187644:
                            return "AddCartItemAsync";
                    case 1937130587:
                            return "RemoveCartItemAsync";
                    case 1843508608:
                            return "GetCartAsync";
                    case 2108903392:
                            return "UpdateCartAsync";
                    case 371224422:
                            return "ClearStateAsync";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }
                case -1097320095:  // IGrainWithGuidKey
                    switch (methodId)
                    {
                        
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class ProductGrainFactory
    {
        

                        public static Cloudrocket.Interfaces.IProductGrain GetGrain(long primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IProductGrain), -1123860407, primaryKey));
                        }

                        public static Cloudrocket.Interfaces.IProductGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IProductGrain), -1123860407, primaryKey, grainClassNamePrefix));
                        }

                        public static Cloudrocket.Interfaces.IProductGrain GetGrain(System.Guid primaryKey)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IProductGrain), -1123860407, primaryKey));
                        }

                        public static Cloudrocket.Interfaces.IProductGrain GetGrain(System.Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(global::Orleans.CodeGeneration.GrainFactoryBase.MakeGrainReferenceInternal(typeof(Cloudrocket.Interfaces.IProductGrain), -1123860407, primaryKey, grainClassNamePrefix));
                        }

            public static Cloudrocket.Interfaces.IProductGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return ProductGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [global::Orleans.CodeGeneration.GrainReferenceAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IProductGrain")]
        internal class ProductGrainReference : global::Orleans.Runtime.GrainReference, global::Orleans.Runtime.IAddressable, Cloudrocket.Interfaces.IProductGrain
        {
            

            public static Cloudrocket.Interfaces.IProductGrain Cast(global::Orleans.Runtime.IAddressable grainRef)
            {
                
                return (Cloudrocket.Interfaces.IProductGrain) global::Orleans.Runtime.GrainReference.CastInternal(typeof(Cloudrocket.Interfaces.IProductGrain), (global::Orleans.Runtime.GrainReference gr) => { return new ProductGrainReference(gr);}, grainRef, -1123860407);
            }
            
            protected internal ProductGrainReference(global::Orleans.Runtime.GrainReference reference) : 
                    base(reference)
            {
            }
            
            protected internal ProductGrainReference(SerializationInfo info, StreamingContext context) : 
                    base(info, context)
            {
            }
            
            protected override int InterfaceId
            {
                get
                {
                    return -1123860407;
                }
            }
            
            public override string InterfaceName
            {
                get
                {
                    return "Cloudrocket.Interfaces.Cloudrocket.Interfaces.IProductGrain";
                }
            }
            
            [global::Orleans.CodeGeneration.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                ProductGrainReference input = ((ProductGrainReference)(original));
                return ((ProductGrainReference)(global::Orleans.Runtime.GrainReference.CopyGrainReference(input)));
            }
            
            [global::Orleans.CodeGeneration.SerializerMethodAttribute()]
            public static void _Serializer(object original, global::Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                ProductGrainReference input = ((ProductGrainReference)(original));
                global::Orleans.Runtime.GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [global::Orleans.CodeGeneration.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return ProductGrainReference.Cast(((global::Orleans.Runtime.GrainReference)(global::Orleans.Runtime.GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public override bool IsCompatible(int interfaceId)
            {
                return (interfaceId == this.InterfaceId);
            }
            
            protected override string GetMethodName(int interfaceId, int methodId)
            {
                return ProductGrainMethodInvoker.GetMethodName(interfaceId, methodId);
            }
            
            System.Threading.Tasks.Task<string> Cloudrocket.Interfaces.IProductGrain.GetProduct(string @productId)
            {

                return base.InvokeMethodAsync<System.String>(-1474045056, new object[] {@productId} );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.MethodInvokerAttribute("Cloudrocket.Interfaces.Cloudrocket.Interfaces.IProductGrain", -1123860407)]
    internal class ProductGrainMethodInvoker : global::Orleans.CodeGeneration.IGrainMethodInvoker
    {
        
        int global::Orleans.CodeGeneration.IGrainMethodInvoker.InterfaceId
        {
            get
            {
                return -1123860407;
            }
        }
        
        global::System.Threading.Tasks.Task<object> global::Orleans.CodeGeneration.IGrainMethodInvoker.Invoke(global::Orleans.Runtime.IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {

            try
            {                    if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case -1123860407:  // IProductGrain
                        switch (methodId)
                        {
                            case -1474045056: 
                                return ((IProductGrain)grain).GetProduct((String)arguments[0]).ContinueWith(t => {if (t.Status == System.Threading.Tasks.TaskStatus.Faulted) throw t.Exception; return (object)t.Result; });
                            default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
            }
            catch(Exception ex)
            {
                var t = new System.Threading.Tasks.TaskCompletionSource<object>();
                t.SetException(ex);
                return t.Task;
            }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case -1123860407:  // IProductGrain
                    switch (methodId)
                    {
                        case -1474045056:
                            return "GetProduct";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_Interfaces_BaseAddressSerialization
    {
        
        static Cloudrocket_Interfaces_BaseAddressSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.Interfaces.BaseAddress input = ((Cloudrocket.Interfaces.BaseAddress)(original));
            Cloudrocket.Interfaces.BaseAddress result = new Cloudrocket.Interfaces.BaseAddress();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.AddressLine1 = input.AddressLine1;
            result.AddressLine2 = input.AddressLine2;
            result.AddressLine3 = input.AddressLine3;
            result.City = input.City;
            result.Country = input.Country;
            result.Latitude = input.Latitude;
            result.Longitude = input.Longitude;
            result.StateProvince = input.StateProvince;
            result.ZipPostalCode = input.ZipPostalCode;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.Interfaces.BaseAddress input = ((Cloudrocket.Interfaces.BaseAddress)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AddressLine1, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AddressLine2, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AddressLine3, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.City, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Country, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Latitude, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Longitude, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StateProvince, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ZipPostalCode, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.Interfaces.BaseAddress result = new Cloudrocket.Interfaces.BaseAddress();
            result.AddressLine1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.AddressLine2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.AddressLine3 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.City = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Country = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Latitude = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Longitude = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.StateProvince = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.ZipPostalCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.Interfaces.BaseAddress), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_Interfaces_CartSerialization
    {
        
        static Cloudrocket_Interfaces_CartSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.Interfaces.Cart input = ((Cloudrocket.Interfaces.Cart)(original));
            Cloudrocket.Interfaces.Cart result = new Cloudrocket.Interfaces.Cart();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.CartId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CartId)));
            result.CartItems = ((System.Collections.Generic.List<Cloudrocket.Interfaces.CartItem>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CartItems)));
            result.OrderId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.OrderId)));
            result.ShippingAddress = ((Cloudrocket.Interfaces.BaseAddress)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ShippingAddress)));
            result.ShippingTotal = input.ShippingTotal;
            result.Subtotal = input.Subtotal;
            result.TaxTotal = input.TaxTotal;
            result.Total = input.Total;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.Interfaces.Cart input = ((Cloudrocket.Interfaces.Cart)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CartId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CartItems, stream, typeof(System.Collections.Generic.List<Cloudrocket.Interfaces.CartItem>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.OrderId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ShippingAddress, stream, typeof(Cloudrocket.Interfaces.BaseAddress));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ShippingTotal, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Subtotal, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxTotal, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Total, stream, typeof(decimal));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.Interfaces.Cart result = new Cloudrocket.Interfaces.Cart();
            result.CartId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            result.CartItems = ((System.Collections.Generic.List<Cloudrocket.Interfaces.CartItem>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<Cloudrocket.Interfaces.CartItem>), stream)));
            result.OrderId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            result.ShippingAddress = ((Cloudrocket.Interfaces.BaseAddress)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.Interfaces.BaseAddress), stream)));
            result.ShippingTotal = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Subtotal = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TaxTotal = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Total = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.Interfaces.Cart), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_Interfaces_OrderSerialization
    {
        
        static Cloudrocket_Interfaces_OrderSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.Interfaces.Order input = ((Cloudrocket.Interfaces.Order)(original));
            Cloudrocket.Interfaces.Order result = new Cloudrocket.Interfaces.Order();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.OrderDescription = input.OrderDescription;
            result.OrderId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.OrderId)));
            result.OrderItems = ((System.Collections.Generic.List<Cloudrocket.Interfaces.OrderItem>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.OrderItems)));
            result.OrderNumber = input.OrderNumber;
            result.OrderURL = ((System.Uri)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.OrderURL)));
            result.ShippingTotal = input.ShippingTotal;
            result.Subtotal = input.Subtotal;
            result.TaxTotal = input.TaxTotal;
            result.Total = input.Total;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.Interfaces.Order input = ((Cloudrocket.Interfaces.Order)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.OrderDescription, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.OrderId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.OrderItems, stream, typeof(System.Collections.Generic.List<Cloudrocket.Interfaces.OrderItem>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.OrderNumber, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.OrderURL, stream, typeof(System.Uri));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ShippingTotal, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Subtotal, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxTotal, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Total, stream, typeof(decimal));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.Interfaces.Order result = new Cloudrocket.Interfaces.Order();
            result.OrderDescription = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.OrderId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            result.OrderItems = ((System.Collections.Generic.List<Cloudrocket.Interfaces.OrderItem>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<Cloudrocket.Interfaces.OrderItem>), stream)));
            result.OrderNumber = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.OrderURL = ((System.Uri)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Uri), stream)));
            result.ShippingTotal = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Subtotal = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TaxTotal = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Total = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.Interfaces.Order), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_Interfaces_OrderItemSerialization
    {
        
        static Cloudrocket_Interfaces_OrderItemSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.Interfaces.OrderItem input = ((Cloudrocket.Interfaces.OrderItem)(original));
            Cloudrocket.Interfaces.OrderItem result = new Cloudrocket.Interfaces.OrderItem();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.CartItemId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CartItemId)));
            result.Currency = input.Currency;
            result.Description = input.Description;
            result.Name = input.Name;
            result.OrderId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.OrderId)));
            result.OrderItemId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.OrderItemId)));
            result.OrderItemTotal = input.OrderItemTotal;
            result.Price = input.Price;
            result.ProductSKU = input.ProductSKU;
            result.ProductTaxCode = input.ProductTaxCode;
            result.ProductUrl = input.ProductUrl;
            result.Quantity = input.Quantity;
            result.ShippingCost = input.ShippingCost;
            result.ShippingWeight = input.ShippingWeight;
            result.Subtotal = input.Subtotal;
            result.TaxCost = input.TaxCost;
            result.TaxResult = ((Cloudrocket.Interfaces.TaxResult)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.TaxResult)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.Interfaces.OrderItem input = ((Cloudrocket.Interfaces.OrderItem)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CartItemId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Currency, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Description, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.OrderId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.OrderItemId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.OrderItemTotal, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Price, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProductSKU, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProductTaxCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProductUrl, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Quantity, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ShippingCost, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ShippingWeight, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Subtotal, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxCost, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxResult, stream, typeof(Cloudrocket.Interfaces.TaxResult));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.Interfaces.OrderItem result = new Cloudrocket.Interfaces.OrderItem();
            result.CartItemId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            result.Currency = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Description = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.OrderId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            result.OrderItemId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            result.OrderItemTotal = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Price = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.ProductSKU = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.ProductTaxCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.ProductUrl = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Quantity = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.ShippingCost = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.ShippingWeight = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Subtotal = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TaxCost = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TaxResult = ((Cloudrocket.Interfaces.TaxResult)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.Interfaces.TaxResult), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.Interfaces.OrderItem), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_Interfaces_PurchaseSerialization
    {
        
        static Cloudrocket_Interfaces_PurchaseSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.Interfaces.Purchase input = ((Cloudrocket.Interfaces.Purchase)(original));
            Cloudrocket.Interfaces.Purchase result = new Cloudrocket.Interfaces.Purchase();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Card = ((Cloudrocket.Interfaces.Card)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Card)));
            result.Cart = ((Cloudrocket.Interfaces.Cart)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Cart)));
            result.Order = ((Cloudrocket.Interfaces.Order)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Order)));
            result.PaymentTransaction = ((Cloudrocket.Interfaces.PaymentTransaction)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.PaymentTransaction)));
            result.PurchaseId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.PurchaseId)));
            result.ShippingAddress = ((Cloudrocket.Interfaces.BaseAddress)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ShippingAddress)));
            result.ShippingTotal = input.ShippingTotal;
            result.Subtotal = input.Subtotal;
            result.TaxTotal = input.TaxTotal;
            result.Total = input.Total;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.Interfaces.Purchase input = ((Cloudrocket.Interfaces.Purchase)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Card, stream, typeof(Cloudrocket.Interfaces.Card));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Cart, stream, typeof(Cloudrocket.Interfaces.Cart));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Order, stream, typeof(Cloudrocket.Interfaces.Order));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PaymentTransaction, stream, typeof(Cloudrocket.Interfaces.PaymentTransaction));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PurchaseId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ShippingAddress, stream, typeof(Cloudrocket.Interfaces.BaseAddress));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ShippingTotal, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Subtotal, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxTotal, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Total, stream, typeof(decimal));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.Interfaces.Purchase result = new Cloudrocket.Interfaces.Purchase();
            result.Card = ((Cloudrocket.Interfaces.Card)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.Interfaces.Card), stream)));
            result.Cart = ((Cloudrocket.Interfaces.Cart)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.Interfaces.Cart), stream)));
            result.Order = ((Cloudrocket.Interfaces.Order)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.Interfaces.Order), stream)));
            result.PaymentTransaction = ((Cloudrocket.Interfaces.PaymentTransaction)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.Interfaces.PaymentTransaction), stream)));
            result.PurchaseId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            result.ShippingAddress = ((Cloudrocket.Interfaces.BaseAddress)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.Interfaces.BaseAddress), stream)));
            result.ShippingTotal = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Subtotal = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TaxTotal = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Total = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.Interfaces.Purchase), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_Interfaces_PaymentTransactionSerialization
    {
        
        static Cloudrocket_Interfaces_PaymentTransactionSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.Interfaces.PaymentTransaction input = ((Cloudrocket.Interfaces.PaymentTransaction)(original));
            Cloudrocket.Interfaces.PaymentTransaction result = new Cloudrocket.Interfaces.PaymentTransaction();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.CartId = input.CartId;
            result.CreateTime = input.CreateTime;
            result.TransactionResult = input.TransactionResult;
            result.TransactionStatus = input.TransactionStatus;
            result.TransactionTrace = input.TransactionTrace;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.Interfaces.PaymentTransaction input = ((Cloudrocket.Interfaces.PaymentTransaction)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CartId, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CreateTime, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TransactionResult, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TransactionStatus, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TransactionTrace, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.Interfaces.PaymentTransaction result = new Cloudrocket.Interfaces.PaymentTransaction();
            result.CartId = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.CreateTime = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.TransactionResult = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.TransactionStatus = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.TransactionTrace = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.Interfaces.PaymentTransaction), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_Interfaces_TaxRequestSerialization
    {
        
        static Cloudrocket_Interfaces_TaxRequestSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.Interfaces.TaxRequest input = ((Cloudrocket.Interfaces.TaxRequest)(original));
            Cloudrocket.Interfaces.TaxRequest result = new Cloudrocket.Interfaces.TaxRequest();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Addresses = ((Cloudrocket.AvaTax.LocationAddress[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Addresses)));
            result.BusinessIdentificationNo = input.BusinessIdentificationNo;
            result.Client = input.Client;
            result.Commit = input.Commit;
            result.CompanyCode = input.CompanyCode;
            result.CurrencyCode = input.CurrencyCode;
            result.CustomerCode = input.CustomerCode;
            result.CustomerUsageType = input.CustomerUsageType;
            result.DetailLevel = input.DetailLevel;
            result.Discount = input.Discount;
            result.DocCode = input.DocCode;
            result.DocDate = input.DocDate;
            result.DocType = input.DocType;
            result.ExemptionNo = input.ExemptionNo;
            result.Lines = ((Cloudrocket.AvaTax.Line[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Lines)));
            result.PaymentDate = input.PaymentDate;
            result.PosLaneCode = input.PosLaneCode;
            result.PurchaseOrderNo = input.PurchaseOrderNo;
            result.ReferenceCode = input.ReferenceCode;
            result.TaxOverride = ((Cloudrocket.AvaTax.TaxOverrideDef)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.TaxOverride)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.Interfaces.TaxRequest input = ((Cloudrocket.Interfaces.TaxRequest)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Addresses, stream, typeof(Cloudrocket.AvaTax.LocationAddress[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.BusinessIdentificationNo, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Client, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Commit, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CompanyCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CurrencyCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CustomerCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CustomerUsageType, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DetailLevel, stream, typeof(Cloudrocket.AvaTax.DetailLevel));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Discount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DocCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DocDate, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DocType, stream, typeof(Cloudrocket.AvaTax.DocType));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ExemptionNo, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Lines, stream, typeof(Cloudrocket.AvaTax.Line[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PaymentDate, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PosLaneCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PurchaseOrderNo, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ReferenceCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxOverride, stream, typeof(Cloudrocket.AvaTax.TaxOverrideDef));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.Interfaces.TaxRequest result = new Cloudrocket.Interfaces.TaxRequest();
            result.Addresses = ((Cloudrocket.AvaTax.LocationAddress[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.LocationAddress[]), stream)));
            result.BusinessIdentificationNo = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Client = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Commit = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            result.CompanyCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.CurrencyCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.CustomerCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.CustomerUsageType = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.DetailLevel = ((Cloudrocket.AvaTax.DetailLevel)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.DetailLevel), stream)));
            result.Discount = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.DocCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.DocDate = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.DocType = ((Cloudrocket.AvaTax.DocType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.DocType), stream)));
            result.ExemptionNo = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Lines = ((Cloudrocket.AvaTax.Line[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.Line[]), stream)));
            result.PaymentDate = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.PosLaneCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.PurchaseOrderNo = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.ReferenceCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.TaxOverride = ((Cloudrocket.AvaTax.TaxOverrideDef)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.TaxOverrideDef), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.Interfaces.TaxRequest), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_Interfaces_TaxResultSerialization
    {
        
        static Cloudrocket_Interfaces_TaxResultSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.Interfaces.TaxResult input = ((Cloudrocket.Interfaces.TaxResult)(original));
            Cloudrocket.Interfaces.TaxResult result = new Cloudrocket.Interfaces.TaxResult();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.DocCode = input.DocCode;
            result.DocDate = input.DocDate;
            result.Messages = ((Cloudrocket.AvaTax.Message[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Messages)));
            result.ResultCode = input.ResultCode;
            result.TaxAddresses = ((Cloudrocket.AvaTax.TaxAddress[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.TaxAddresses)));
            result.TaxDate = input.TaxDate;
            result.TaxLines = ((Cloudrocket.AvaTax.TaxLine[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.TaxLines)));
            result.TaxSummary = ((Cloudrocket.AvaTax.TaxLine[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.TaxSummary)));
            result.TimeStamp = input.TimeStamp;
            result.TotalAmount = input.TotalAmount;
            result.TotalDiscount = input.TotalDiscount;
            result.TotalExemption = input.TotalExemption;
            result.TotalTax = input.TotalTax;
            result.TotalTaxCalculated = input.TotalTaxCalculated;
            result.TotalTaxable = input.TotalTaxable;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.Interfaces.TaxResult input = ((Cloudrocket.Interfaces.TaxResult)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DocCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DocDate, stream, typeof(System.DateTime));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Messages, stream, typeof(Cloudrocket.AvaTax.Message[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ResultCode, stream, typeof(Cloudrocket.AvaTax.SeverityLevel));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxAddresses, stream, typeof(Cloudrocket.AvaTax.TaxAddress[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxDate, stream, typeof(System.DateTime));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxLines, stream, typeof(Cloudrocket.AvaTax.TaxLine[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxSummary, stream, typeof(Cloudrocket.AvaTax.TaxLine[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TimeStamp, stream, typeof(System.DateTime));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TotalAmount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TotalDiscount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TotalExemption, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TotalTax, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TotalTaxCalculated, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TotalTaxable, stream, typeof(decimal));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.Interfaces.TaxResult result = new Cloudrocket.Interfaces.TaxResult();
            result.DocCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.DocDate = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            result.Messages = ((Cloudrocket.AvaTax.Message[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.Message[]), stream)));
            result.ResultCode = ((Cloudrocket.AvaTax.SeverityLevel)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.SeverityLevel), stream)));
            result.TaxAddresses = ((Cloudrocket.AvaTax.TaxAddress[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.TaxAddress[]), stream)));
            result.TaxDate = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            result.TaxLines = ((Cloudrocket.AvaTax.TaxLine[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.TaxLine[]), stream)));
            result.TaxSummary = ((Cloudrocket.AvaTax.TaxLine[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.TaxLine[]), stream)));
            result.TimeStamp = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            result.TotalAmount = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TotalDiscount = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TotalExemption = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TotalTax = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TotalTaxCalculated = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TotalTaxable = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.Interfaces.TaxResult), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_Interfaces_GeoLocationSerialization
    {
        
        static Cloudrocket_Interfaces_GeoLocationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.Interfaces.GeoLocation input = ((Cloudrocket.Interfaces.GeoLocation)(original));
            Cloudrocket.Interfaces.GeoLocation result = new Cloudrocket.Interfaces.GeoLocation();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.AddressLine1 = input.AddressLine1;
            result.AddressLine2 = input.AddressLine2;
            result.AddressLine3 = input.AddressLine3;
            result.City = input.City;
            result.Country = input.Country;
            result.Latitude = input.Latitude;
            result.Longitude = input.Longitude;
            result.StateProvince = input.StateProvince;
            result.ZipPostalCode = input.ZipPostalCode;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.Interfaces.GeoLocation input = ((Cloudrocket.Interfaces.GeoLocation)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AddressLine1, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AddressLine2, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AddressLine3, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.City, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Country, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Latitude, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Longitude, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.StateProvince, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ZipPostalCode, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.Interfaces.GeoLocation result = new Cloudrocket.Interfaces.GeoLocation();
            result.AddressLine1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.AddressLine2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.AddressLine3 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.City = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Country = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Latitude = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Longitude = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.StateProvince = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.ZipPostalCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.Interfaces.GeoLocation), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_Interfaces_CardSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo10;
        
        static Cloudrocket_Interfaces_CardSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.Interfaces.Card input = ((Cloudrocket.Interfaces.Card)(original));
            Cloudrocket.Interfaces.Card result = new Cloudrocket.Interfaces.Card();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.BillingAddress = ((Cloudrocket.Interfaces.BaseAddress)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.BillingAddress)));
            result.CardCvvCode = input.CardCvvCode;
            result.CardType = input.CardType;
            result.EmailAddress = input.EmailAddress;
            result.ExpirationMonth = input.ExpirationMonth;
            result.ExpirationYear = input.ExpirationYear;
            result.FirstName = input.FirstName;
            result.LastName = input.LastName;
            result.Telephone = input.Telephone;
            object objResult = ((object)(result));
            object temp10 = fieldInfo10.GetValue(input);
            fieldInfo10.SetValue(objResult, temp10);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.Interfaces.Card input = ((Cloudrocket.Interfaces.Card)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.BillingAddress, stream, typeof(Cloudrocket.Interfaces.BaseAddress));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CardCvvCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CardType, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.EmailAddress, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ExpirationMonth, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ExpirationYear, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.FirstName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LastName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Telephone, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo10.GetValue(input), stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.Interfaces.Card result = new Cloudrocket.Interfaces.Card();
            result.BillingAddress = ((Cloudrocket.Interfaces.BaseAddress)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.Interfaces.BaseAddress), stream)));
            result.CardCvvCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.CardType = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.EmailAddress = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.ExpirationMonth = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.ExpirationYear = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.FirstName = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.LastName = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Telephone = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            object objResult = ((object)(result));
            object temp10 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo10.SetValue(objResult, temp10);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.Interfaces.Card), DeepCopier, Serializer, Deserializer);
            fieldInfo10 = typeof(Cloudrocket.Interfaces.Card).GetField("_cardNumber", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_Interfaces_PaymentRequestSerialization
    {
        
        static Cloudrocket_Interfaces_PaymentRequestSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.Interfaces.PaymentRequest input = ((Cloudrocket.Interfaces.PaymentRequest)(original));
            Cloudrocket.Interfaces.PaymentRequest result = new Cloudrocket.Interfaces.PaymentRequest();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.cart = input.cart;
            result.create_time = input.create_time;
            result.experience_profile_id = input.experience_profile_id;
            result.failed_transactions = ((System.Collections.Generic.List<PayPal.Api.Error>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.failed_transactions)));
            result.id = input.id;
            result.intent = input.intent;
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            result.payee = ((PayPal.Api.Payee)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.payee)));
            result.payer = ((PayPal.Api.Payer)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.payer)));
            result.payment_instruction = ((PayPal.Api.PaymentInstruction)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.payment_instruction)));
            result.redirect_urls = ((PayPal.Api.RedirectUrls)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.redirect_urls)));
            result.state = input.state;
            result.token = input.token;
            result.transactions = ((System.Collections.Generic.List<PayPal.Api.Transaction>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.transactions)));
            result.update_time = input.update_time;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.Interfaces.PaymentRequest input = ((Cloudrocket.Interfaces.PaymentRequest)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.cart, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.create_time, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.experience_profile_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.failed_transactions, stream, typeof(System.Collections.Generic.List<PayPal.Api.Error>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.intent, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payee, stream, typeof(PayPal.Api.Payee));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payer, stream, typeof(PayPal.Api.Payer));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payment_instruction, stream, typeof(PayPal.Api.PaymentInstruction));
            Orleans.Serialization.SerializationManager.SerializeInner(input.redirect_urls, stream, typeof(PayPal.Api.RedirectUrls));
            Orleans.Serialization.SerializationManager.SerializeInner(input.state, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.token, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.transactions, stream, typeof(System.Collections.Generic.List<PayPal.Api.Transaction>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.update_time, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.Interfaces.PaymentRequest result = new Cloudrocket.Interfaces.PaymentRequest();
            result.cart = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.create_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.experience_profile_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.failed_transactions = ((System.Collections.Generic.List<PayPal.Api.Error>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Error>), stream)));
            result.id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.intent = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            result.payee = ((PayPal.Api.Payee)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Payee), stream)));
            result.payer = ((PayPal.Api.Payer)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Payer), stream)));
            result.payment_instruction = ((PayPal.Api.PaymentInstruction)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.PaymentInstruction), stream)));
            result.redirect_urls = ((PayPal.Api.RedirectUrls)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.RedirectUrls), stream)));
            result.state = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.token = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.transactions = ((System.Collections.Generic.List<PayPal.Api.Transaction>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Transaction>), stream)));
            result.update_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.Interfaces.PaymentRequest), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_Interfaces_PaymentResponseSerialization
    {
        
        static Cloudrocket_Interfaces_PaymentResponseSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.Interfaces.PaymentResponse input = ((Cloudrocket.Interfaces.PaymentResponse)(original));
            Cloudrocket.Interfaces.PaymentResponse result = new Cloudrocket.Interfaces.PaymentResponse();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.cart = input.cart;
            result.create_time = input.create_time;
            result.experience_profile_id = input.experience_profile_id;
            result.failed_transactions = ((System.Collections.Generic.List<PayPal.Api.Error>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.failed_transactions)));
            result.id = input.id;
            result.intent = input.intent;
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            result.payee = ((PayPal.Api.Payee)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.payee)));
            result.payer = ((PayPal.Api.Payer)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.payer)));
            result.payment_instruction = ((PayPal.Api.PaymentInstruction)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.payment_instruction)));
            result.redirect_urls = ((PayPal.Api.RedirectUrls)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.redirect_urls)));
            result.state = input.state;
            result.token = input.token;
            result.transactions = ((System.Collections.Generic.List<PayPal.Api.Transaction>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.transactions)));
            result.update_time = input.update_time;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.Interfaces.PaymentResponse input = ((Cloudrocket.Interfaces.PaymentResponse)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.cart, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.create_time, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.experience_profile_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.failed_transactions, stream, typeof(System.Collections.Generic.List<PayPal.Api.Error>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.intent, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payee, stream, typeof(PayPal.Api.Payee));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payer, stream, typeof(PayPal.Api.Payer));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payment_instruction, stream, typeof(PayPal.Api.PaymentInstruction));
            Orleans.Serialization.SerializationManager.SerializeInner(input.redirect_urls, stream, typeof(PayPal.Api.RedirectUrls));
            Orleans.Serialization.SerializationManager.SerializeInner(input.state, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.token, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.transactions, stream, typeof(System.Collections.Generic.List<PayPal.Api.Transaction>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.update_time, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.Interfaces.PaymentResponse result = new Cloudrocket.Interfaces.PaymentResponse();
            result.cart = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.create_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.experience_profile_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.failed_transactions = ((System.Collections.Generic.List<PayPal.Api.Error>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Error>), stream)));
            result.id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.intent = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            result.payee = ((PayPal.Api.Payee)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Payee), stream)));
            result.payer = ((PayPal.Api.Payer)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Payer), stream)));
            result.payment_instruction = ((PayPal.Api.PaymentInstruction)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.PaymentInstruction), stream)));
            result.redirect_urls = ((PayPal.Api.RedirectUrls)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.RedirectUrls), stream)));
            result.state = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.token = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.transactions = ((System.Collections.Generic.List<PayPal.Api.Transaction>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Transaction>), stream)));
            result.update_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.Interfaces.PaymentResponse), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_Interfaces_EmailMessageSerialization
    {
        
        static Cloudrocket_Interfaces_EmailMessageSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.Interfaces.EmailMessage input = ((Cloudrocket.Interfaces.EmailMessage)(original));
            Cloudrocket.Interfaces.EmailMessage result = new Cloudrocket.Interfaces.EmailMessage();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.EnableClickTracking = input.EnableClickTracking;
            result.EnableFooter = input.EnableFooter;
            result.EnableOpenTracking = input.EnableOpenTracking;
            result.EnableTempate = input.EnableTempate;
            result.EnableTemplateEngine = input.EnableTemplateEngine;
            result.EnableUnsubscribe = input.EnableUnsubscribe;
            result.From = ((Cloudrocket.Interfaces.EmailAddress)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.From)));
            result.Html = input.Html;
            result.Subject = input.Subject;
            result.Text = input.Text;
            result.To = ((Cloudrocket.Interfaces.EmailAddress)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.To)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.Interfaces.EmailMessage input = ((Cloudrocket.Interfaces.EmailMessage)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.EnableClickTracking, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.EnableFooter, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.EnableOpenTracking, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.EnableTempate, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.EnableTemplateEngine, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.EnableUnsubscribe, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.From, stream, typeof(Cloudrocket.Interfaces.EmailAddress));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Html, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Subject, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Text, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.To, stream, typeof(Cloudrocket.Interfaces.EmailAddress));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.Interfaces.EmailMessage result = new Cloudrocket.Interfaces.EmailMessage();
            result.EnableClickTracking = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            result.EnableFooter = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.EnableOpenTracking = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            result.EnableTempate = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.EnableTemplateEngine = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.EnableUnsubscribe = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.From = ((Cloudrocket.Interfaces.EmailAddress)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.Interfaces.EmailAddress), stream)));
            result.Html = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Subject = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Text = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.To = ((Cloudrocket.Interfaces.EmailAddress)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.Interfaces.EmailAddress), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.Interfaces.EmailMessage), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_Interfaces_EmailAddressSerialization
    {
        
        static Cloudrocket_Interfaces_EmailAddressSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.Interfaces.EmailAddress input = ((Cloudrocket.Interfaces.EmailAddress)(original));
            Cloudrocket.Interfaces.EmailAddress result = new Cloudrocket.Interfaces.EmailAddress();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Address = input.Address;
            result.DisplayName = input.DisplayName;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.Interfaces.EmailAddress input = ((Cloudrocket.Interfaces.EmailAddress)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Address, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DisplayName, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.Interfaces.EmailAddress result = new Cloudrocket.Interfaces.EmailAddress();
            result.Address = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.DisplayName = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.Interfaces.EmailAddress), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_Interfaces_CartItemSerialization
    {
        
        static Cloudrocket_Interfaces_CartItemSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.Interfaces.CartItem input = ((Cloudrocket.Interfaces.CartItem)(original));
            Cloudrocket.Interfaces.CartItem result = new Cloudrocket.Interfaces.CartItem();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.CartId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CartId)));
            result.CartItemId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CartItemId)));
            result.CartItemTotal = input.CartItemTotal;
            result.Currency = input.Currency;
            result.Description = input.Description;
            result.Name = input.Name;
            result.Price = input.Price;
            result.ProductSKU = input.ProductSKU;
            result.ProductTaxCode = input.ProductTaxCode;
            result.ProductUrl = input.ProductUrl;
            result.Quantity = input.Quantity;
            result.ShippingCost = input.ShippingCost;
            result.ShippingWeight = input.ShippingWeight;
            result.Subtotal = input.Subtotal;
            result.TaxCost = input.TaxCost;
            result.TaxResult = ((Cloudrocket.Interfaces.TaxResult)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.TaxResult)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.Interfaces.CartItem input = ((Cloudrocket.Interfaces.CartItem)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CartId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CartItemId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CartItemTotal, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Currency, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Description, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Price, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProductSKU, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProductTaxCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProductUrl, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Quantity, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ShippingCost, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ShippingWeight, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Subtotal, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxCost, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxResult, stream, typeof(Cloudrocket.Interfaces.TaxResult));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.Interfaces.CartItem result = new Cloudrocket.Interfaces.CartItem();
            result.CartId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            result.CartItemId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            result.CartItemTotal = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Currency = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Description = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Price = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.ProductSKU = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.ProductTaxCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.ProductUrl = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Quantity = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.ShippingCost = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.ShippingWeight = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Subtotal = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TaxCost = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TaxResult = ((Cloudrocket.Interfaces.TaxResult)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.Interfaces.TaxResult), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.Interfaces.CartItem), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_Interfaces_ProductSerialization
    {
        
        static Cloudrocket_Interfaces_ProductSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.Interfaces.Product input = ((Cloudrocket.Interfaces.Product)(original));
            Cloudrocket.Interfaces.Product result = new Cloudrocket.Interfaces.Product();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Description = input.Description;
            result.Manufacturer = input.Manufacturer;
            result.Name = input.Name;
            result.Price = input.Price;
            result.ProductImage = ((System.Uri)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ProductImage)));
            result.ProductItemId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ProductItemId)));
            result.ProductName = input.ProductName;
            result.ProductSKU = input.ProductSKU;
            result.ProductTaxCode = input.ProductTaxCode;
            result.ProductUrl = ((System.Uri)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ProductUrl)));
            result.ProductVideo = ((System.Uri)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ProductVideo)));
            result.ShippingWeight = input.ShippingWeight;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.Interfaces.Product input = ((Cloudrocket.Interfaces.Product)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Description, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Manufacturer, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Price, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProductImage, stream, typeof(System.Uri));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProductItemId, stream, typeof(System.Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProductName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProductSKU, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProductTaxCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProductUrl, stream, typeof(System.Uri));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProductVideo, stream, typeof(System.Uri));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ShippingWeight, stream, typeof(decimal));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.Interfaces.Product result = new Cloudrocket.Interfaces.Product();
            result.Description = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Manufacturer = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Price = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.ProductImage = ((System.Uri)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Uri), stream)));
            result.ProductItemId = ((System.Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Guid), stream)));
            result.ProductName = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.ProductSKU = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.ProductTaxCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.ProductUrl = ((System.Uri)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Uri), stream)));
            result.ProductVideo = ((System.Uri)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Uri), stream)));
            result.ShippingWeight = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.Interfaces.Product), DeepCopier, Serializer, Deserializer);
        }
    }
}
namespace Cloudrocket.InterfacesSerializers
{
    using System;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using Cloudrocket.AvaTax;
    using PayPal.Api;
    using System.Collections;
    using System.Runtime.InteropServices;
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_AvaTax_CancelTaxResultSerialization
    {
        
        static Cloudrocket_AvaTax_CancelTaxResultSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.AvaTax.CancelTaxResult input = ((Cloudrocket.AvaTax.CancelTaxResult)(original));
            Cloudrocket.AvaTax.CancelTaxResult result = new Cloudrocket.AvaTax.CancelTaxResult();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.DocId = input.DocId;
            result.Messages = ((Cloudrocket.AvaTax.Message[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Messages)));
            result.ResultCode = input.ResultCode;
            result.TransactionId = input.TransactionId;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.AvaTax.CancelTaxResult input = ((Cloudrocket.AvaTax.CancelTaxResult)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DocId, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Messages, stream, typeof(Cloudrocket.AvaTax.Message[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ResultCode, stream, typeof(Cloudrocket.AvaTax.SeverityLevel));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TransactionId, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.AvaTax.CancelTaxResult result = new Cloudrocket.AvaTax.CancelTaxResult();
            result.DocId = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Messages = ((Cloudrocket.AvaTax.Message[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.Message[]), stream)));
            result.ResultCode = ((Cloudrocket.AvaTax.SeverityLevel)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.SeverityLevel), stream)));
            result.TransactionId = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.AvaTax.CancelTaxResult), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_AvaTax_MessageSerialization
    {
        
        static Cloudrocket_AvaTax_MessageSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.AvaTax.Message input = ((Cloudrocket.AvaTax.Message)(original));
            Cloudrocket.AvaTax.Message result = new Cloudrocket.AvaTax.Message();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Details = input.Details;
            result.RefersTo = input.RefersTo;
            result.Severity = input.Severity;
            result.Source = input.Source;
            result.Summary = input.Summary;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.AvaTax.Message input = ((Cloudrocket.AvaTax.Message)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Details, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.RefersTo, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Severity, stream, typeof(Cloudrocket.AvaTax.SeverityLevel));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Source, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Summary, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.AvaTax.Message result = new Cloudrocket.AvaTax.Message();
            result.Details = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.RefersTo = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Severity = ((Cloudrocket.AvaTax.SeverityLevel)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.SeverityLevel), stream)));
            result.Source = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Summary = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.AvaTax.Message), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_AvaTax_CancelTaxRequestSerialization
    {
        
        static Cloudrocket_AvaTax_CancelTaxRequestSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.AvaTax.CancelTaxRequest input = ((Cloudrocket.AvaTax.CancelTaxRequest)(original));
            Cloudrocket.AvaTax.CancelTaxRequest result = new Cloudrocket.AvaTax.CancelTaxRequest();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.CancelCode = input.CancelCode;
            result.CompanyCode = input.CompanyCode;
            result.DocCode = input.DocCode;
            result.DocType = input.DocType;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.AvaTax.CancelTaxRequest input = ((Cloudrocket.AvaTax.CancelTaxRequest)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CancelCode, stream, typeof(Cloudrocket.AvaTax.CancelCode));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CompanyCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DocCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DocType, stream, typeof(Cloudrocket.AvaTax.DocType));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.AvaTax.CancelTaxRequest result = new Cloudrocket.AvaTax.CancelTaxRequest();
            result.CancelCode = ((Cloudrocket.AvaTax.CancelCode)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.CancelCode), stream)));
            result.CompanyCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.DocCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.DocType = ((Cloudrocket.AvaTax.DocType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.DocType), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.AvaTax.CancelTaxRequest), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_AvaTax_GetTaxResultSerialization
    {
        
        static Cloudrocket_AvaTax_GetTaxResultSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.AvaTax.GetTaxResult input = ((Cloudrocket.AvaTax.GetTaxResult)(original));
            Cloudrocket.AvaTax.GetTaxResult result = new Cloudrocket.AvaTax.GetTaxResult();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.DocCode = input.DocCode;
            result.DocDate = input.DocDate;
            result.Messages = ((Cloudrocket.AvaTax.Message[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Messages)));
            result.ResultCode = input.ResultCode;
            result.TaxAddresses = ((Cloudrocket.AvaTax.TaxAddress[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.TaxAddresses)));
            result.TaxDate = input.TaxDate;
            result.TaxLines = ((Cloudrocket.AvaTax.TaxLine[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.TaxLines)));
            result.TaxSummary = ((Cloudrocket.AvaTax.TaxLine[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.TaxSummary)));
            result.TimeStamp = input.TimeStamp;
            result.TotalAmount = input.TotalAmount;
            result.TotalDiscount = input.TotalDiscount;
            result.TotalExemption = input.TotalExemption;
            result.TotalTax = input.TotalTax;
            result.TotalTaxCalculated = input.TotalTaxCalculated;
            result.TotalTaxable = input.TotalTaxable;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.AvaTax.GetTaxResult input = ((Cloudrocket.AvaTax.GetTaxResult)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DocCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DocDate, stream, typeof(System.DateTime));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Messages, stream, typeof(Cloudrocket.AvaTax.Message[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ResultCode, stream, typeof(Cloudrocket.AvaTax.SeverityLevel));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxAddresses, stream, typeof(Cloudrocket.AvaTax.TaxAddress[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxDate, stream, typeof(System.DateTime));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxLines, stream, typeof(Cloudrocket.AvaTax.TaxLine[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxSummary, stream, typeof(Cloudrocket.AvaTax.TaxLine[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TimeStamp, stream, typeof(System.DateTime));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TotalAmount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TotalDiscount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TotalExemption, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TotalTax, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TotalTaxCalculated, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TotalTaxable, stream, typeof(decimal));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.AvaTax.GetTaxResult result = new Cloudrocket.AvaTax.GetTaxResult();
            result.DocCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.DocDate = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            result.Messages = ((Cloudrocket.AvaTax.Message[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.Message[]), stream)));
            result.ResultCode = ((Cloudrocket.AvaTax.SeverityLevel)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.SeverityLevel), stream)));
            result.TaxAddresses = ((Cloudrocket.AvaTax.TaxAddress[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.TaxAddress[]), stream)));
            result.TaxDate = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            result.TaxLines = ((Cloudrocket.AvaTax.TaxLine[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.TaxLine[]), stream)));
            result.TaxSummary = ((Cloudrocket.AvaTax.TaxLine[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.TaxLine[]), stream)));
            result.TimeStamp = ((System.DateTime)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.DateTime), stream)));
            result.TotalAmount = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TotalDiscount = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TotalExemption = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TotalTax = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TotalTaxCalculated = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TotalTaxable = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.AvaTax.GetTaxResult), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_AvaTax_TaxLineSerialization
    {
        
        static Cloudrocket_AvaTax_TaxLineSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.AvaTax.TaxLine input = ((Cloudrocket.AvaTax.TaxLine)(original));
            Cloudrocket.AvaTax.TaxLine result = new Cloudrocket.AvaTax.TaxLine();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Discount = input.Discount;
            result.Exemption = input.Exemption;
            result.LineNo = input.LineNo;
            result.Rate = input.Rate;
            result.Tax = input.Tax;
            result.TaxCalculated = input.TaxCalculated;
            result.TaxCode = input.TaxCode;
            result.TaxDetails = ((Cloudrocket.AvaTax.TaxDetail[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.TaxDetails)));
            result.Taxability = input.Taxability;
            result.Taxable = input.Taxable;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.AvaTax.TaxLine input = ((Cloudrocket.AvaTax.TaxLine)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Discount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Exemption, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LineNo, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Rate, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Tax, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxCalculated, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxDetails, stream, typeof(Cloudrocket.AvaTax.TaxDetail[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Taxability, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Taxable, stream, typeof(decimal));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.AvaTax.TaxLine result = new Cloudrocket.AvaTax.TaxLine();
            result.Discount = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Exemption = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.LineNo = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Rate = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Tax = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TaxCalculated = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TaxCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.TaxDetails = ((Cloudrocket.AvaTax.TaxDetail[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.TaxDetail[]), stream)));
            result.Taxability = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            result.Taxable = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.AvaTax.TaxLine), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_AvaTax_TaxDetailSerialization
    {
        
        static Cloudrocket_AvaTax_TaxDetailSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.AvaTax.TaxDetail input = ((Cloudrocket.AvaTax.TaxDetail)(original));
            Cloudrocket.AvaTax.TaxDetail result = new Cloudrocket.AvaTax.TaxDetail();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Country = input.Country;
            result.JurisName = input.JurisName;
            result.JurisType = input.JurisType;
            result.Rate = input.Rate;
            result.Region = input.Region;
            result.Tax = input.Tax;
            result.TaxName = input.TaxName;
            result.Taxable = input.Taxable;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.AvaTax.TaxDetail input = ((Cloudrocket.AvaTax.TaxDetail)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Country, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.JurisName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.JurisType, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Rate, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Region, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Tax, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxName, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Taxable, stream, typeof(decimal));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.AvaTax.TaxDetail result = new Cloudrocket.AvaTax.TaxDetail();
            result.Country = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.JurisName = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.JurisType = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Rate = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Region = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Tax = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TaxName = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Taxable = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.AvaTax.TaxDetail), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_AvaTax_TaxAddressSerialization
    {
        
        static Cloudrocket_AvaTax_TaxAddressSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.AvaTax.TaxAddress input = ((Cloudrocket.AvaTax.TaxAddress)(original));
            Cloudrocket.AvaTax.TaxAddress result = new Cloudrocket.AvaTax.TaxAddress();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Address = input.Address;
            result.AddressCode = input.AddressCode;
            result.City = input.City;
            result.Country = input.Country;
            result.JurisCode = input.JurisCode;
            result.Latitude = input.Latitude;
            result.Longitude = input.Longitude;
            result.PostalCode = input.PostalCode;
            result.Region = input.Region;
            result.TaxRegionId = input.TaxRegionId;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.AvaTax.TaxAddress input = ((Cloudrocket.AvaTax.TaxAddress)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Address, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AddressCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.City, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Country, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.JurisCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Latitude, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Longitude, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PostalCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Region, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxRegionId, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.AvaTax.TaxAddress result = new Cloudrocket.AvaTax.TaxAddress();
            result.Address = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.AddressCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.City = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Country = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.JurisCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Latitude = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Longitude = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.PostalCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Region = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.TaxRegionId = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.AvaTax.TaxAddress), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_AvaTax_GetTaxRequestSerialization
    {
        
        static Cloudrocket_AvaTax_GetTaxRequestSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.AvaTax.GetTaxRequest input = ((Cloudrocket.AvaTax.GetTaxRequest)(original));
            Cloudrocket.AvaTax.GetTaxRequest result = new Cloudrocket.AvaTax.GetTaxRequest();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Addresses = ((Cloudrocket.AvaTax.LocationAddress[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Addresses)));
            result.BusinessIdentificationNo = input.BusinessIdentificationNo;
            result.Client = input.Client;
            result.Commit = input.Commit;
            result.CompanyCode = input.CompanyCode;
            result.CurrencyCode = input.CurrencyCode;
            result.CustomerCode = input.CustomerCode;
            result.CustomerUsageType = input.CustomerUsageType;
            result.DetailLevel = input.DetailLevel;
            result.Discount = input.Discount;
            result.DocCode = input.DocCode;
            result.DocDate = input.DocDate;
            result.DocType = input.DocType;
            result.ExemptionNo = input.ExemptionNo;
            result.Lines = ((Cloudrocket.AvaTax.Line[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Lines)));
            result.PaymentDate = input.PaymentDate;
            result.PosLaneCode = input.PosLaneCode;
            result.PurchaseOrderNo = input.PurchaseOrderNo;
            result.ReferenceCode = input.ReferenceCode;
            result.TaxOverride = ((Cloudrocket.AvaTax.TaxOverrideDef)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.TaxOverride)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.AvaTax.GetTaxRequest input = ((Cloudrocket.AvaTax.GetTaxRequest)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Addresses, stream, typeof(Cloudrocket.AvaTax.LocationAddress[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.BusinessIdentificationNo, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Client, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Commit, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CompanyCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CurrencyCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CustomerCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CustomerUsageType, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DetailLevel, stream, typeof(Cloudrocket.AvaTax.DetailLevel));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Discount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DocCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DocDate, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DocType, stream, typeof(Cloudrocket.AvaTax.DocType));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ExemptionNo, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Lines, stream, typeof(Cloudrocket.AvaTax.Line[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PaymentDate, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PosLaneCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PurchaseOrderNo, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ReferenceCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxOverride, stream, typeof(Cloudrocket.AvaTax.TaxOverrideDef));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.AvaTax.GetTaxRequest result = new Cloudrocket.AvaTax.GetTaxRequest();
            result.Addresses = ((Cloudrocket.AvaTax.LocationAddress[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.LocationAddress[]), stream)));
            result.BusinessIdentificationNo = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Client = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Commit = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            result.CompanyCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.CurrencyCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.CustomerCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.CustomerUsageType = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.DetailLevel = ((Cloudrocket.AvaTax.DetailLevel)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.DetailLevel), stream)));
            result.Discount = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.DocCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.DocDate = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.DocType = ((Cloudrocket.AvaTax.DocType)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.DocType), stream)));
            result.ExemptionNo = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Lines = ((Cloudrocket.AvaTax.Line[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.Line[]), stream)));
            result.PaymentDate = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.PosLaneCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.PurchaseOrderNo = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.ReferenceCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.TaxOverride = ((Cloudrocket.AvaTax.TaxOverrideDef)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.TaxOverrideDef), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.AvaTax.GetTaxRequest), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_AvaTax_TaxOverrideDefSerialization
    {
        
        static Cloudrocket_AvaTax_TaxOverrideDefSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.AvaTax.TaxOverrideDef input = ((Cloudrocket.AvaTax.TaxOverrideDef)(original));
            Cloudrocket.AvaTax.TaxOverrideDef result = new Cloudrocket.AvaTax.TaxOverrideDef();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Reason = input.Reason;
            result.TaxAmount = input.TaxAmount;
            result.TaxDate = input.TaxDate;
            result.TaxOverrideType = input.TaxOverrideType;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.AvaTax.TaxOverrideDef input = ((Cloudrocket.AvaTax.TaxOverrideDef)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Reason, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxAmount, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxDate, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxOverrideType, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.AvaTax.TaxOverrideDef result = new Cloudrocket.AvaTax.TaxOverrideDef();
            result.Reason = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.TaxAmount = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.TaxDate = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.TaxOverrideType = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.AvaTax.TaxOverrideDef), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_AvaTax_LineSerialization
    {
        
        static Cloudrocket_AvaTax_LineSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.AvaTax.Line input = ((Cloudrocket.AvaTax.Line)(original));
            Cloudrocket.AvaTax.Line result = new Cloudrocket.AvaTax.Line();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Amount = input.Amount;
            result.CustomerUsageType = input.CustomerUsageType;
            result.Description = input.Description;
            result.DestinationCode = input.DestinationCode;
            result.Discounted = input.Discounted;
            result.ItemCode = input.ItemCode;
            result.LineNo = input.LineNo;
            result.OriginCode = input.OriginCode;
            result.Qty = input.Qty;
            result.Ref1 = input.Ref1;
            result.Ref2 = input.Ref2;
            result.TaxCode = input.TaxCode;
            result.TaxIncluded = input.TaxIncluded;
            result.TaxOverride = ((Cloudrocket.AvaTax.TaxOverrideDef)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.TaxOverride)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.AvaTax.Line input = ((Cloudrocket.AvaTax.Line)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Amount, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CustomerUsageType, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Description, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.DestinationCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Discounted, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ItemCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LineNo, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.OriginCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Qty, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Ref1, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Ref2, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxIncluded, stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxOverride, stream, typeof(Cloudrocket.AvaTax.TaxOverrideDef));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.AvaTax.Line result = new Cloudrocket.AvaTax.Line();
            result.Amount = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.CustomerUsageType = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Description = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.DestinationCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Discounted = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            result.ItemCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.LineNo = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.OriginCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Qty = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.Ref1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Ref2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.TaxCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.TaxIncluded = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            result.TaxOverride = ((Cloudrocket.AvaTax.TaxOverrideDef)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.TaxOverrideDef), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.AvaTax.Line), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_AvaTax_GeoTaxResultSerialization
    {
        
        static Cloudrocket_AvaTax_GeoTaxResultSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.AvaTax.GeoTaxResult input = ((Cloudrocket.AvaTax.GeoTaxResult)(original));
            Cloudrocket.AvaTax.GeoTaxResult result = new Cloudrocket.AvaTax.GeoTaxResult();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Messages = ((Cloudrocket.AvaTax.Message[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Messages)));
            result.Rate = input.Rate;
            result.ResultCode = input.ResultCode;
            result.Tax = input.Tax;
            result.TaxDetails = ((Cloudrocket.AvaTax.TaxDetail[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.TaxDetails)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.AvaTax.GeoTaxResult input = ((Cloudrocket.AvaTax.GeoTaxResult)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Messages, stream, typeof(Cloudrocket.AvaTax.Message[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Rate, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ResultCode, stream, typeof(Cloudrocket.AvaTax.SeverityLevel));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Tax, stream, typeof(decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxDetails, stream, typeof(Cloudrocket.AvaTax.TaxDetail[]));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.AvaTax.GeoTaxResult result = new Cloudrocket.AvaTax.GeoTaxResult();
            result.Messages = ((Cloudrocket.AvaTax.Message[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.Message[]), stream)));
            result.Rate = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.ResultCode = ((Cloudrocket.AvaTax.SeverityLevel)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.SeverityLevel), stream)));
            result.Tax = ((decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(decimal), stream)));
            result.TaxDetails = ((Cloudrocket.AvaTax.TaxDetail[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.TaxDetail[]), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.AvaTax.GeoTaxResult), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_AvaTax_ValidateResultSerialization
    {
        
        static Cloudrocket_AvaTax_ValidateResultSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.AvaTax.ValidateResult input = ((Cloudrocket.AvaTax.ValidateResult)(original));
            Cloudrocket.AvaTax.ValidateResult result = new Cloudrocket.AvaTax.ValidateResult();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.Address = ((Cloudrocket.AvaTax.LocationAddress)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Address)));
            result.Messages = ((Cloudrocket.AvaTax.Message[])(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Messages)));
            result.ResultCode = input.ResultCode;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.AvaTax.ValidateResult input = ((Cloudrocket.AvaTax.ValidateResult)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Address, stream, typeof(Cloudrocket.AvaTax.LocationAddress));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Messages, stream, typeof(Cloudrocket.AvaTax.Message[]));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ResultCode, stream, typeof(Cloudrocket.AvaTax.SeverityLevel));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.AvaTax.ValidateResult result = new Cloudrocket.AvaTax.ValidateResult();
            result.Address = ((Cloudrocket.AvaTax.LocationAddress)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.LocationAddress), stream)));
            result.Messages = ((Cloudrocket.AvaTax.Message[])(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.Message[]), stream)));
            result.ResultCode = ((Cloudrocket.AvaTax.SeverityLevel)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Cloudrocket.AvaTax.SeverityLevel), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.AvaTax.ValidateResult), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class Cloudrocket_AvaTax_LocationAddressSerialization
    {
        
        static Cloudrocket_AvaTax_LocationAddressSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            Cloudrocket.AvaTax.LocationAddress input = ((Cloudrocket.AvaTax.LocationAddress)(original));
            Cloudrocket.AvaTax.LocationAddress result = new Cloudrocket.AvaTax.LocationAddress();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.AddressCode = input.AddressCode;
            result.AddressType = ((System.Nullable<Cloudrocket.AvaTax.AddressType>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.AddressType)));
            result.CarrierRoute = input.CarrierRoute;
            result.City = input.City;
            result.Country = input.Country;
            result.County = input.County;
            result.FipsCode = input.FipsCode;
            result.Latitude = ((System.Nullable<System.Decimal>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Latitude)));
            result.Line1 = input.Line1;
            result.Line2 = input.Line2;
            result.Line3 = input.Line3;
            result.Longitude = ((System.Nullable<System.Decimal>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Longitude)));
            result.PostNet = input.PostNet;
            result.PostalCode = input.PostalCode;
            result.Region = input.Region;
            result.TaxRegionId = input.TaxRegionId;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            Cloudrocket.AvaTax.LocationAddress input = ((Cloudrocket.AvaTax.LocationAddress)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AddressCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.AddressType, stream, typeof(System.Nullable<Cloudrocket.AvaTax.AddressType>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CarrierRoute, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.City, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Country, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.County, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.FipsCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Latitude, stream, typeof(System.Nullable<System.Decimal>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Line1, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Line2, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Line3, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Longitude, stream, typeof(System.Nullable<System.Decimal>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PostNet, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.PostalCode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Region, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxRegionId, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            Cloudrocket.AvaTax.LocationAddress result = new Cloudrocket.AvaTax.LocationAddress();
            result.AddressCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.AddressType = ((System.Nullable<Cloudrocket.AvaTax.AddressType>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<Cloudrocket.AvaTax.AddressType>), stream)));
            result.CarrierRoute = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.City = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Country = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.County = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.FipsCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Latitude = ((System.Nullable<System.Decimal>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.Decimal>), stream)));
            result.Line1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Line2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Line3 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Longitude = ((System.Nullable<System.Decimal>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.Decimal>), stream)));
            result.PostNet = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.PostalCode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.Region = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.TaxRegionId = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(Cloudrocket.AvaTax.LocationAddress), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_APIContextSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        private static System.Reflection.FieldInfo fieldInfo6;
        
        static PayPal_Api_APIContextSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.APIContext input = ((PayPal.Api.APIContext)(original));
            PayPal.Api.APIContext result = new PayPal.Api.APIContext();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.Dictionary<System.String,System.String>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo1.GetValue(input))));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((System.Collections.Generic.Dictionary<System.String,System.String>)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo2.GetValue(input))));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = fieldInfo3.GetValue(input);
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = fieldInfo4.GetValue(input);
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((PayPal.Api.SDKVersion)(Orleans.Serialization.SerializationManager.DeepCopyInner(fieldInfo5.GetValue(input))));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = fieldInfo6.GetValue(input);
            fieldInfo6.SetValue(objResult, temp6);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.APIContext input = ((PayPal.Api.APIContext)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo1.GetValue(input), stream, typeof(System.Collections.Generic.Dictionary<System.String,System.String>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo2.GetValue(input), stream, typeof(System.Collections.Generic.Dictionary<System.String,System.String>));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo3.GetValue(input), stream, typeof(bool));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo4.GetValue(input), stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo5.GetValue(input), stream, typeof(PayPal.Api.SDKVersion));
            Orleans.Serialization.SerializationManager.SerializeInner(fieldInfo6.GetValue(input), stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.APIContext result = new PayPal.Api.APIContext();
            object objResult = ((object)(result));
            object temp1 = ((System.Collections.Generic.Dictionary<System.String,System.String>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.Dictionary<System.String,System.String>), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((System.Collections.Generic.Dictionary<System.String,System.String>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.Dictionary<System.String,System.String>), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((bool)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(bool), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((PayPal.Api.SDKVersion)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.SDKVersion), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            object temp6 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            fieldInfo6.SetValue(objResult, temp6);
            return objResult;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.APIContext), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(PayPal.Api.APIContext).GetField("dynamicConfig", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(PayPal.Api.APIContext).GetField("httpHeaders", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(PayPal.Api.APIContext).GetField("maskReqId", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(PayPal.Api.APIContext).GetField("reqId", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(PayPal.Api.APIContext).GetField("sVersion", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo6 = typeof(PayPal.Api.APIContext).GetField("token", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_SDKVersionSerialization
    {
        
        static PayPal_Api_SDKVersionSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.SDKVersion input = ((PayPal.Api.SDKVersion)(original));
            PayPal.Api.SDKVersion result = new PayPal.Api.SDKVersion();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.SDKVersion input = ((PayPal.Api.SDKVersion)(untypedInput));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.SDKVersion result = new PayPal.Api.SDKVersion();
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.SDKVersion), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_PaymentSerialization
    {
        
        static PayPal_Api_PaymentSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Payment input = ((PayPal.Api.Payment)(original));
            PayPal.Api.Payment result = new PayPal.Api.Payment();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.cart = input.cart;
            result.create_time = input.create_time;
            result.experience_profile_id = input.experience_profile_id;
            result.failed_transactions = ((System.Collections.Generic.List<PayPal.Api.Error>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.failed_transactions)));
            result.id = input.id;
            result.intent = input.intent;
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            result.payee = ((PayPal.Api.Payee)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.payee)));
            result.payer = ((PayPal.Api.Payer)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.payer)));
            result.payment_instruction = ((PayPal.Api.PaymentInstruction)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.payment_instruction)));
            result.redirect_urls = ((PayPal.Api.RedirectUrls)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.redirect_urls)));
            result.state = input.state;
            result.token = input.token;
            result.transactions = ((System.Collections.Generic.List<PayPal.Api.Transaction>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.transactions)));
            result.update_time = input.update_time;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Payment input = ((PayPal.Api.Payment)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.cart, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.create_time, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.experience_profile_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.failed_transactions, stream, typeof(System.Collections.Generic.List<PayPal.Api.Error>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.intent, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payee, stream, typeof(PayPal.Api.Payee));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payer, stream, typeof(PayPal.Api.Payer));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payment_instruction, stream, typeof(PayPal.Api.PaymentInstruction));
            Orleans.Serialization.SerializationManager.SerializeInner(input.redirect_urls, stream, typeof(PayPal.Api.RedirectUrls));
            Orleans.Serialization.SerializationManager.SerializeInner(input.state, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.token, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.transactions, stream, typeof(System.Collections.Generic.List<PayPal.Api.Transaction>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.update_time, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Payment result = new PayPal.Api.Payment();
            result.cart = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.create_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.experience_profile_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.failed_transactions = ((System.Collections.Generic.List<PayPal.Api.Error>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Error>), stream)));
            result.id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.intent = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            result.payee = ((PayPal.Api.Payee)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Payee), stream)));
            result.payer = ((PayPal.Api.Payer)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Payer), stream)));
            result.payment_instruction = ((PayPal.Api.PaymentInstruction)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.PaymentInstruction), stream)));
            result.redirect_urls = ((PayPal.Api.RedirectUrls)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.RedirectUrls), stream)));
            result.state = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.token = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.transactions = ((System.Collections.Generic.List<PayPal.Api.Transaction>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Transaction>), stream)));
            result.update_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Payment), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_TransactionSerialization
    {
        
        static PayPal_Api_TransactionSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Transaction input = ((PayPal.Api.Transaction)(original));
            PayPal.Api.Transaction result = new PayPal.Api.Transaction();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.amount = ((PayPal.Api.Amount)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.amount)));
            result.custom = input.custom;
            result.description = input.description;
            result.invoice_number = input.invoice_number;
            result.item_list = ((PayPal.Api.ItemList)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.item_list)));
            result.note_to_payee = input.note_to_payee;
            result.notify_url = input.notify_url;
            result.order_url = input.order_url;
            result.payee = ((PayPal.Api.Payee)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.payee)));
            result.payment_options = ((PayPal.Api.PaymentOptions)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.payment_options)));
            result.purchase_unit_reference_id = input.purchase_unit_reference_id;
            result.related_resources = ((System.Collections.Generic.List<PayPal.Api.RelatedResources>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.related_resources)));
            result.soft_descriptor = input.soft_descriptor;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Transaction input = ((PayPal.Api.Transaction)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.amount, stream, typeof(PayPal.Api.Amount));
            Orleans.Serialization.SerializationManager.SerializeInner(input.custom, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.description, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.invoice_number, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.item_list, stream, typeof(PayPal.Api.ItemList));
            Orleans.Serialization.SerializationManager.SerializeInner(input.note_to_payee, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.notify_url, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.order_url, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payee, stream, typeof(PayPal.Api.Payee));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payment_options, stream, typeof(PayPal.Api.PaymentOptions));
            Orleans.Serialization.SerializationManager.SerializeInner(input.purchase_unit_reference_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.related_resources, stream, typeof(System.Collections.Generic.List<PayPal.Api.RelatedResources>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.soft_descriptor, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Transaction result = new PayPal.Api.Transaction();
            result.amount = ((PayPal.Api.Amount)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Amount), stream)));
            result.custom = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.description = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.invoice_number = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.item_list = ((PayPal.Api.ItemList)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.ItemList), stream)));
            result.note_to_payee = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.notify_url = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.order_url = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.payee = ((PayPal.Api.Payee)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Payee), stream)));
            result.payment_options = ((PayPal.Api.PaymentOptions)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.PaymentOptions), stream)));
            result.purchase_unit_reference_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.related_resources = ((System.Collections.Generic.List<PayPal.Api.RelatedResources>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.RelatedResources>), stream)));
            result.soft_descriptor = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Transaction), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_RelatedResourcesSerialization
    {
        
        static PayPal_Api_RelatedResourcesSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.RelatedResources input = ((PayPal.Api.RelatedResources)(original));
            PayPal.Api.RelatedResources result = new PayPal.Api.RelatedResources();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.authorization = ((PayPal.Api.Authorization)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.authorization)));
            result.capture = ((PayPal.Api.Capture)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.capture)));
            result.order = ((PayPal.Api.Order)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.order)));
            result.refund = ((PayPal.Api.Refund)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.refund)));
            result.sale = ((PayPal.Api.Sale)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.sale)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.RelatedResources input = ((PayPal.Api.RelatedResources)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.authorization, stream, typeof(PayPal.Api.Authorization));
            Orleans.Serialization.SerializationManager.SerializeInner(input.capture, stream, typeof(PayPal.Api.Capture));
            Orleans.Serialization.SerializationManager.SerializeInner(input.order, stream, typeof(PayPal.Api.Order));
            Orleans.Serialization.SerializationManager.SerializeInner(input.refund, stream, typeof(PayPal.Api.Refund));
            Orleans.Serialization.SerializationManager.SerializeInner(input.sale, stream, typeof(PayPal.Api.Sale));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.RelatedResources result = new PayPal.Api.RelatedResources();
            result.authorization = ((PayPal.Api.Authorization)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Authorization), stream)));
            result.capture = ((PayPal.Api.Capture)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Capture), stream)));
            result.order = ((PayPal.Api.Order)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Order), stream)));
            result.refund = ((PayPal.Api.Refund)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Refund), stream)));
            result.sale = ((PayPal.Api.Sale)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Sale), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.RelatedResources), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_SaleSerialization
    {
        
        static PayPal_Api_SaleSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Sale input = ((PayPal.Api.Sale)(original));
            PayPal.Api.Sale result = new PayPal.Api.Sale();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.amount = ((PayPal.Api.Amount)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.amount)));
            result.clearing_time = input.clearing_time;
            result.create_time = input.create_time;
            result.exchange_rate = input.exchange_rate;
            result.fmf_details = ((PayPal.Api.FmfDetails)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.fmf_details)));
            result.hold_reason = input.hold_reason;
            result.id = input.id;
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            result.parent_payment = input.parent_payment;
            result.payment_mode = input.payment_mode;
            result.protection_eligibility = input.protection_eligibility;
            result.protection_eligibility_type = input.protection_eligibility_type;
            result.purchase_unit_reference_id = input.purchase_unit_reference_id;
            result.reason_code = input.reason_code;
            result.receipt_id = input.receipt_id;
            result.receivable_amount = ((PayPal.Api.Currency)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.receivable_amount)));
            result.recipient_fund_status = input.recipient_fund_status;
            result.state = input.state;
            result.transaction_fee = ((PayPal.Api.Currency)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.transaction_fee)));
            result.update_time = input.update_time;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Sale input = ((PayPal.Api.Sale)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.amount, stream, typeof(PayPal.Api.Amount));
            Orleans.Serialization.SerializationManager.SerializeInner(input.clearing_time, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.create_time, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.exchange_rate, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.fmf_details, stream, typeof(PayPal.Api.FmfDetails));
            Orleans.Serialization.SerializationManager.SerializeInner(input.hold_reason, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.parent_payment, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payment_mode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.protection_eligibility, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.protection_eligibility_type, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.purchase_unit_reference_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.reason_code, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.receipt_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.receivable_amount, stream, typeof(PayPal.Api.Currency));
            Orleans.Serialization.SerializationManager.SerializeInner(input.recipient_fund_status, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.state, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.transaction_fee, stream, typeof(PayPal.Api.Currency));
            Orleans.Serialization.SerializationManager.SerializeInner(input.update_time, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Sale result = new PayPal.Api.Sale();
            result.amount = ((PayPal.Api.Amount)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Amount), stream)));
            result.clearing_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.create_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.exchange_rate = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.fmf_details = ((PayPal.Api.FmfDetails)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.FmfDetails), stream)));
            result.hold_reason = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            result.parent_payment = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.payment_mode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.protection_eligibility = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.protection_eligibility_type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.purchase_unit_reference_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.reason_code = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.receipt_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.receivable_amount = ((PayPal.Api.Currency)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Currency), stream)));
            result.recipient_fund_status = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.state = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.transaction_fee = ((PayPal.Api.Currency)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Currency), stream)));
            result.update_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Sale), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_CurrencySerialization
    {
        
        static PayPal_Api_CurrencySerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Currency input = ((PayPal.Api.Currency)(original));
            PayPal.Api.Currency result = new PayPal.Api.Currency();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.currency = input.currency;
            result.value = input.value;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Currency input = ((PayPal.Api.Currency)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.currency, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.value, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Currency result = new PayPal.Api.Currency();
            result.currency = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.value = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Currency), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_FmfDetailsSerialization
    {
        
        static PayPal_Api_FmfDetailsSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.FmfDetails input = ((PayPal.Api.FmfDetails)(original));
            PayPal.Api.FmfDetails result = new PayPal.Api.FmfDetails();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.description = input.description;
            result.filter_id = input.filter_id;
            result.filter_type = input.filter_type;
            result.name = input.name;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.FmfDetails input = ((PayPal.Api.FmfDetails)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.description, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.filter_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.filter_type, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.name, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.FmfDetails result = new PayPal.Api.FmfDetails();
            result.description = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.filter_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.filter_type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.FmfDetails), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_RefundSerialization
    {
        
        static PayPal_Api_RefundSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Refund input = ((PayPal.Api.Refund)(original));
            PayPal.Api.Refund result = new PayPal.Api.Refund();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.amount = ((PayPal.Api.Amount)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.amount)));
            result.capture_id = input.capture_id;
            result.create_time = input.create_time;
            result.description = input.description;
            result.id = input.id;
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            result.parent_payment = input.parent_payment;
            result.reason = input.reason;
            result.sale_id = input.sale_id;
            result.state = input.state;
            result.update_time = input.update_time;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Refund input = ((PayPal.Api.Refund)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.amount, stream, typeof(PayPal.Api.Amount));
            Orleans.Serialization.SerializationManager.SerializeInner(input.capture_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.create_time, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.description, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.parent_payment, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.reason, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.sale_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.state, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.update_time, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Refund result = new PayPal.Api.Refund();
            result.amount = ((PayPal.Api.Amount)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Amount), stream)));
            result.capture_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.create_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.description = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            result.parent_payment = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.reason = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.sale_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.state = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.update_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Refund), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_OrderSerialization
    {
        
        static PayPal_Api_OrderSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Order input = ((PayPal.Api.Order)(original));
            PayPal.Api.Order result = new PayPal.Api.Order();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.amount = ((PayPal.Api.Amount)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.amount)));
            result.create_time = input.create_time;
            result.fmf_details = ((PayPal.Api.FmfDetails)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.fmf_details)));
            result.id = input.id;
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            result.parent_payment = input.parent_payment;
            result.payment_mode = input.payment_mode;
            result.pending_reason = input.pending_reason;
            result.protection_eligibility = input.protection_eligibility;
            result.protection_eligibility_type = input.protection_eligibility_type;
            result.purchase_unit_reference_id = input.purchase_unit_reference_id;
            result.reason_code = input.reason_code;
            result.state = input.state;
            result.update_time = input.update_time;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Order input = ((PayPal.Api.Order)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.amount, stream, typeof(PayPal.Api.Amount));
            Orleans.Serialization.SerializationManager.SerializeInner(input.create_time, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.fmf_details, stream, typeof(PayPal.Api.FmfDetails));
            Orleans.Serialization.SerializationManager.SerializeInner(input.id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.parent_payment, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payment_mode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.pending_reason, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.protection_eligibility, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.protection_eligibility_type, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.purchase_unit_reference_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.reason_code, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.state, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.update_time, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Order result = new PayPal.Api.Order();
            result.amount = ((PayPal.Api.Amount)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Amount), stream)));
            result.create_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.fmf_details = ((PayPal.Api.FmfDetails)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.FmfDetails), stream)));
            result.id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            result.parent_payment = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.payment_mode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.pending_reason = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.protection_eligibility = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.protection_eligibility_type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.purchase_unit_reference_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.reason_code = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.state = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.update_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Order), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_CaptureSerialization
    {
        
        static PayPal_Api_CaptureSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Capture input = ((PayPal.Api.Capture)(original));
            PayPal.Api.Capture result = new PayPal.Api.Capture();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.amount = ((PayPal.Api.Amount)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.amount)));
            result.create_time = input.create_time;
            result.id = input.id;
            result.is_final_capture = ((System.Nullable<System.Boolean>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.is_final_capture)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            result.parent_payment = input.parent_payment;
            result.state = input.state;
            result.transaction_fee = ((PayPal.Api.Currency)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.transaction_fee)));
            result.update_time = input.update_time;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Capture input = ((PayPal.Api.Capture)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.amount, stream, typeof(PayPal.Api.Amount));
            Orleans.Serialization.SerializationManager.SerializeInner(input.create_time, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.is_final_capture, stream, typeof(System.Nullable<System.Boolean>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.parent_payment, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.state, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.transaction_fee, stream, typeof(PayPal.Api.Currency));
            Orleans.Serialization.SerializationManager.SerializeInner(input.update_time, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Capture result = new PayPal.Api.Capture();
            result.amount = ((PayPal.Api.Amount)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Amount), stream)));
            result.create_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.is_final_capture = ((System.Nullable<System.Boolean>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.Boolean>), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            result.parent_payment = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.state = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.transaction_fee = ((PayPal.Api.Currency)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Currency), stream)));
            result.update_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Capture), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_AuthorizationSerialization
    {
        
        static PayPal_Api_AuthorizationSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Authorization input = ((PayPal.Api.Authorization)(original));
            PayPal.Api.Authorization result = new PayPal.Api.Authorization();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.amount = ((PayPal.Api.Amount)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.amount)));
            result.create_time = input.create_time;
            result.fmf_details = ((PayPal.Api.FmfDetails)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.fmf_details)));
            result.id = input.id;
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            result.parent_payment = input.parent_payment;
            result.payment_mode = input.payment_mode;
            result.pending_reason = input.pending_reason;
            result.protection_eligibility = input.protection_eligibility;
            result.protection_eligibility_type = input.protection_eligibility_type;
            result.reason_code = input.reason_code;
            result.state = input.state;
            result.update_time = input.update_time;
            result.valid_until = input.valid_until;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Authorization input = ((PayPal.Api.Authorization)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.amount, stream, typeof(PayPal.Api.Amount));
            Orleans.Serialization.SerializationManager.SerializeInner(input.create_time, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.fmf_details, stream, typeof(PayPal.Api.FmfDetails));
            Orleans.Serialization.SerializationManager.SerializeInner(input.id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.parent_payment, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payment_mode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.pending_reason, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.protection_eligibility, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.protection_eligibility_type, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.reason_code, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.state, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.update_time, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.valid_until, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Authorization result = new PayPal.Api.Authorization();
            result.amount = ((PayPal.Api.Amount)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Amount), stream)));
            result.create_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.fmf_details = ((PayPal.Api.FmfDetails)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.FmfDetails), stream)));
            result.id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            result.parent_payment = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.payment_mode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.pending_reason = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.protection_eligibility = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.protection_eligibility_type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.reason_code = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.state = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.update_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.valid_until = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Authorization), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_PaymentOptionsSerialization
    {
        
        static PayPal_Api_PaymentOptionsSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.PaymentOptions input = ((PayPal.Api.PaymentOptions)(original));
            PayPal.Api.PaymentOptions result = new PayPal.Api.PaymentOptions();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.allowed_payment_method = input.allowed_payment_method;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.PaymentOptions input = ((PayPal.Api.PaymentOptions)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.allowed_payment_method, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.PaymentOptions result = new PayPal.Api.PaymentOptions();
            result.allowed_payment_method = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.PaymentOptions), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_ItemListSerialization
    {
        
        static PayPal_Api_ItemListSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.ItemList input = ((PayPal.Api.ItemList)(original));
            PayPal.Api.ItemList result = new PayPal.Api.ItemList();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.items = ((System.Collections.Generic.List<PayPal.Api.Item>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.items)));
            result.shipping_address = ((PayPal.Api.ShippingAddress)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.shipping_address)));
            result.shipping_method = input.shipping_method;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.ItemList input = ((PayPal.Api.ItemList)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.items, stream, typeof(System.Collections.Generic.List<PayPal.Api.Item>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.shipping_address, stream, typeof(PayPal.Api.ShippingAddress));
            Orleans.Serialization.SerializationManager.SerializeInner(input.shipping_method, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.ItemList result = new PayPal.Api.ItemList();
            result.items = ((System.Collections.Generic.List<PayPal.Api.Item>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Item>), stream)));
            result.shipping_address = ((PayPal.Api.ShippingAddress)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.ShippingAddress), stream)));
            result.shipping_method = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.ItemList), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_ShippingAddressSerialization
    {
        
        static PayPal_Api_ShippingAddressSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.ShippingAddress input = ((PayPal.Api.ShippingAddress)(original));
            PayPal.Api.ShippingAddress result = new PayPal.Api.ShippingAddress();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.city = input.city;
            result.country_code = input.country_code;
            result.default_address = ((System.Nullable<System.Boolean>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.default_address)));
            result.id = input.id;
            result.line1 = input.line1;
            result.line2 = input.line2;
            result.normalization_status = input.normalization_status;
            result.phone = input.phone;
            result.postal_code = input.postal_code;
            result.preferred_address = ((System.Nullable<System.Boolean>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.preferred_address)));
            result.recipient_name = input.recipient_name;
            result.state = input.state;
            result.status = input.status;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.ShippingAddress input = ((PayPal.Api.ShippingAddress)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.city, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.country_code, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.default_address, stream, typeof(System.Nullable<System.Boolean>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.line1, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.line2, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.normalization_status, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.phone, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.postal_code, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.preferred_address, stream, typeof(System.Nullable<System.Boolean>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.recipient_name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.state, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.status, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.ShippingAddress result = new PayPal.Api.ShippingAddress();
            result.city = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.country_code = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.default_address = ((System.Nullable<System.Boolean>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.Boolean>), stream)));
            result.id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.line1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.line2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.normalization_status = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.phone = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.postal_code = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.preferred_address = ((System.Nullable<System.Boolean>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.Boolean>), stream)));
            result.recipient_name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.state = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.status = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.ShippingAddress), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_ItemSerialization
    {
        
        static PayPal_Api_ItemSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Item input = ((PayPal.Api.Item)(original));
            PayPal.Api.Item result = new PayPal.Api.Item();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.category = input.category;
            result.currency = input.currency;
            result.description = input.description;
            result.height = ((PayPal.Api.Measurement)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.height)));
            result.length = ((PayPal.Api.Measurement)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.length)));
            result.name = input.name;
            result.postback_data = ((System.Collections.Generic.List<PayPal.Api.NameValuePair>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.postback_data)));
            result.price = input.price;
            result.quantity = input.quantity;
            result.sku = input.sku;
            result.supplementary_data = ((System.Collections.Generic.List<PayPal.Api.NameValuePair>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.supplementary_data)));
            result.tax = input.tax;
            result.url = input.url;
            result.weight = ((PayPal.Api.Measurement)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.weight)));
            result.width = ((PayPal.Api.Measurement)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.width)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Item input = ((PayPal.Api.Item)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.category, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.currency, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.description, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.height, stream, typeof(PayPal.Api.Measurement));
            Orleans.Serialization.SerializationManager.SerializeInner(input.length, stream, typeof(PayPal.Api.Measurement));
            Orleans.Serialization.SerializationManager.SerializeInner(input.name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.postback_data, stream, typeof(System.Collections.Generic.List<PayPal.Api.NameValuePair>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.price, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.quantity, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.sku, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.supplementary_data, stream, typeof(System.Collections.Generic.List<PayPal.Api.NameValuePair>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.tax, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.url, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.weight, stream, typeof(PayPal.Api.Measurement));
            Orleans.Serialization.SerializationManager.SerializeInner(input.width, stream, typeof(PayPal.Api.Measurement));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Item result = new PayPal.Api.Item();
            result.category = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.currency = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.description = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.height = ((PayPal.Api.Measurement)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Measurement), stream)));
            result.length = ((PayPal.Api.Measurement)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Measurement), stream)));
            result.name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.postback_data = ((System.Collections.Generic.List<PayPal.Api.NameValuePair>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.NameValuePair>), stream)));
            result.price = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.quantity = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.sku = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.supplementary_data = ((System.Collections.Generic.List<PayPal.Api.NameValuePair>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.NameValuePair>), stream)));
            result.tax = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.url = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.weight = ((PayPal.Api.Measurement)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Measurement), stream)));
            result.width = ((PayPal.Api.Measurement)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Measurement), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Item), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_NameValuePairSerialization
    {
        
        static PayPal_Api_NameValuePairSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.NameValuePair input = ((PayPal.Api.NameValuePair)(original));
            PayPal.Api.NameValuePair result = new PayPal.Api.NameValuePair();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.name = input.name;
            result.value = input.value;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.NameValuePair input = ((PayPal.Api.NameValuePair)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.value, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.NameValuePair result = new PayPal.Api.NameValuePair();
            result.name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.value = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.NameValuePair), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_MeasurementSerialization
    {
        
        static PayPal_Api_MeasurementSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Measurement input = ((PayPal.Api.Measurement)(original));
            PayPal.Api.Measurement result = new PayPal.Api.Measurement();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.unit = input.unit;
            result.value = input.value;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Measurement input = ((PayPal.Api.Measurement)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.unit, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.value, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Measurement result = new PayPal.Api.Measurement();
            result.unit = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.value = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Measurement), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_AmountSerialization
    {
        
        static PayPal_Api_AmountSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Amount input = ((PayPal.Api.Amount)(original));
            PayPal.Api.Amount result = new PayPal.Api.Amount();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.currency = input.currency;
            result.details = ((PayPal.Api.Details)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.details)));
            result.total = input.total;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Amount input = ((PayPal.Api.Amount)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.currency, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.details, stream, typeof(PayPal.Api.Details));
            Orleans.Serialization.SerializationManager.SerializeInner(input.total, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Amount result = new PayPal.Api.Amount();
            result.currency = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.details = ((PayPal.Api.Details)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Details), stream)));
            result.total = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Amount), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_DetailsSerialization
    {
        
        static PayPal_Api_DetailsSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Details input = ((PayPal.Api.Details)(original));
            PayPal.Api.Details result = new PayPal.Api.Details();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.fee = input.fee;
            result.gift_wrap = input.gift_wrap;
            result.handling_fee = input.handling_fee;
            result.insurance = input.insurance;
            result.shipping = input.shipping;
            result.shipping_discount = input.shipping_discount;
            result.subtotal = input.subtotal;
            result.tax = input.tax;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Details input = ((PayPal.Api.Details)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.fee, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.gift_wrap, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.handling_fee, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.insurance, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.shipping, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.shipping_discount, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.subtotal, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.tax, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Details result = new PayPal.Api.Details();
            result.fee = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.gift_wrap = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.handling_fee = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.insurance = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.shipping = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.shipping_discount = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.subtotal = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.tax = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Details), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_RedirectUrlsSerialization
    {
        
        static PayPal_Api_RedirectUrlsSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.RedirectUrls input = ((PayPal.Api.RedirectUrls)(original));
            PayPal.Api.RedirectUrls result = new PayPal.Api.RedirectUrls();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.cancel_url = input.cancel_url;
            result.return_url = input.return_url;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.RedirectUrls input = ((PayPal.Api.RedirectUrls)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.cancel_url, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.return_url, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.RedirectUrls result = new PayPal.Api.RedirectUrls();
            result.cancel_url = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.return_url = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.RedirectUrls), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_PaymentInstructionSerialization
    {
        
        static PayPal_Api_PaymentInstructionSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.PaymentInstruction input = ((PayPal.Api.PaymentInstruction)(original));
            PayPal.Api.PaymentInstruction result = new PayPal.Api.PaymentInstruction();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.amount = ((PayPal.Api.Currency)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.amount)));
            result.instruction_type = input.instruction_type;
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            result.note = input.note;
            result.payment_due_date = input.payment_due_date;
            result.recipient_banking_instruction = ((PayPal.Api.RecipientBankingInstruction)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.recipient_banking_instruction)));
            result.reference_number = input.reference_number;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.PaymentInstruction input = ((PayPal.Api.PaymentInstruction)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.amount, stream, typeof(PayPal.Api.Currency));
            Orleans.Serialization.SerializationManager.SerializeInner(input.instruction_type, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.note, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payment_due_date, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.recipient_banking_instruction, stream, typeof(PayPal.Api.RecipientBankingInstruction));
            Orleans.Serialization.SerializationManager.SerializeInner(input.reference_number, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.PaymentInstruction result = new PayPal.Api.PaymentInstruction();
            result.amount = ((PayPal.Api.Currency)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Currency), stream)));
            result.instruction_type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            result.note = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.payment_due_date = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.recipient_banking_instruction = ((PayPal.Api.RecipientBankingInstruction)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.RecipientBankingInstruction), stream)));
            result.reference_number = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.PaymentInstruction), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_RecipientBankingInstructionSerialization
    {
        
        static PayPal_Api_RecipientBankingInstructionSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.RecipientBankingInstruction input = ((PayPal.Api.RecipientBankingInstruction)(original));
            PayPal.Api.RecipientBankingInstruction result = new PayPal.Api.RecipientBankingInstruction();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.account_holder_name = input.account_holder_name;
            result.account_number = input.account_number;
            result.bank_identifier_code = input.bank_identifier_code;
            result.bank_name = input.bank_name;
            result.international_bank_account_number = input.international_bank_account_number;
            result.routing_number = input.routing_number;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.RecipientBankingInstruction input = ((PayPal.Api.RecipientBankingInstruction)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.account_holder_name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.account_number, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.bank_identifier_code, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.bank_name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.international_bank_account_number, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.routing_number, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.RecipientBankingInstruction result = new PayPal.Api.RecipientBankingInstruction();
            result.account_holder_name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.account_number = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.bank_identifier_code = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.bank_name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.international_bank_account_number = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.routing_number = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.RecipientBankingInstruction), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_PayerSerialization
    {
        
        static PayPal_Api_PayerSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Payer input = ((PayPal.Api.Payer)(original));
            PayPal.Api.Payer result = new PayPal.Api.Payer();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.account_age = input.account_age;
            result.account_type = input.account_type;
            result.funding_instruments = ((System.Collections.Generic.List<PayPal.Api.FundingInstrument>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.funding_instruments)));
            result.funding_option = ((PayPal.Api.FundingOption)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.funding_option)));
            result.funding_option_id = input.funding_option_id;
            result.payer_info = ((PayPal.Api.PayerInfo)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.payer_info)));
            result.payment_method = input.payment_method;
            result.related_funding_option = ((PayPal.Api.FundingOption)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.related_funding_option)));
            result.status = input.status;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Payer input = ((PayPal.Api.Payer)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.account_age, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.account_type, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.funding_instruments, stream, typeof(System.Collections.Generic.List<PayPal.Api.FundingInstrument>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.funding_option, stream, typeof(PayPal.Api.FundingOption));
            Orleans.Serialization.SerializationManager.SerializeInner(input.funding_option_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payer_info, stream, typeof(PayPal.Api.PayerInfo));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payment_method, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.related_funding_option, stream, typeof(PayPal.Api.FundingOption));
            Orleans.Serialization.SerializationManager.SerializeInner(input.status, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Payer result = new PayPal.Api.Payer();
            result.account_age = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.account_type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.funding_instruments = ((System.Collections.Generic.List<PayPal.Api.FundingInstrument>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.FundingInstrument>), stream)));
            result.funding_option = ((PayPal.Api.FundingOption)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.FundingOption), stream)));
            result.funding_option_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.payer_info = ((PayPal.Api.PayerInfo)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.PayerInfo), stream)));
            result.payment_method = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.related_funding_option = ((PayPal.Api.FundingOption)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.FundingOption), stream)));
            result.status = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Payer), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_PayerInfoSerialization
    {
        
        static PayPal_Api_PayerInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.PayerInfo input = ((PayPal.Api.PayerInfo)(original));
            PayPal.Api.PayerInfo result = new PayPal.Api.PayerInfo();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.billing_address = ((PayPal.Api.Address)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.billing_address)));
            result.birth_date = input.birth_date;
            result.buyer_account_number = input.buyer_account_number;
            result.country_code = input.country_code;
            result.email = input.email;
            result.external_remember_me_id = input.external_remember_me_id;
            result.first_name = input.first_name;
            result.last_name = input.last_name;
            result.middle_name = input.middle_name;
            result.payer_id = input.payer_id;
            result.phone = input.phone;
            result.phone_type = input.phone_type;
            result.salutation = input.salutation;
            result.shipping_address = ((PayPal.Api.ShippingAddress)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.shipping_address)));
            result.suffix = input.suffix;
            result.tax_id = input.tax_id;
            result.tax_id_type = input.tax_id_type;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.PayerInfo input = ((PayPal.Api.PayerInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.billing_address, stream, typeof(PayPal.Api.Address));
            Orleans.Serialization.SerializationManager.SerializeInner(input.birth_date, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.buyer_account_number, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.country_code, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.email, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.external_remember_me_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.first_name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.last_name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.middle_name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payer_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.phone, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.phone_type, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.salutation, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.shipping_address, stream, typeof(PayPal.Api.ShippingAddress));
            Orleans.Serialization.SerializationManager.SerializeInner(input.suffix, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.tax_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.tax_id_type, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.PayerInfo result = new PayPal.Api.PayerInfo();
            result.billing_address = ((PayPal.Api.Address)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Address), stream)));
            result.birth_date = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.buyer_account_number = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.country_code = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.email = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.external_remember_me_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.first_name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.last_name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.middle_name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.payer_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.phone = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.phone_type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.salutation = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.shipping_address = ((PayPal.Api.ShippingAddress)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.ShippingAddress), stream)));
            result.suffix = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.tax_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.tax_id_type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.PayerInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_AddressSerialization
    {
        
        static PayPal_Api_AddressSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Address input = ((PayPal.Api.Address)(original));
            PayPal.Api.Address result = new PayPal.Api.Address();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.city = input.city;
            result.country_code = input.country_code;
            result.line1 = input.line1;
            result.line2 = input.line2;
            result.normalization_status = input.normalization_status;
            result.phone = input.phone;
            result.postal_code = input.postal_code;
            result.state = input.state;
            result.status = input.status;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Address input = ((PayPal.Api.Address)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.city, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.country_code, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.line1, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.line2, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.normalization_status, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.phone, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.postal_code, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.state, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.status, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Address result = new PayPal.Api.Address();
            result.city = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.country_code = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.line1 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.line2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.normalization_status = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.phone = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.postal_code = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.state = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.status = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Address), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_FundingOptionSerialization
    {
        
        static PayPal_Api_FundingOptionSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.FundingOption input = ((PayPal.Api.FundingOption)(original));
            PayPal.Api.FundingOption result = new PayPal.Api.FundingOption();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.backup_funding_instrument = ((PayPal.Api.FundingInstrument)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.backup_funding_instrument)));
            result.currency_conversion = ((PayPal.Api.CurrencyConversion)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.currency_conversion)));
            result.funding_sources = ((System.Collections.Generic.List<PayPal.Api.FundingSource>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.funding_sources)));
            result.id = input.id;
            result.installment_info = ((PayPal.Api.InstallmentInfo)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.installment_info)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.FundingOption input = ((PayPal.Api.FundingOption)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.backup_funding_instrument, stream, typeof(PayPal.Api.FundingInstrument));
            Orleans.Serialization.SerializationManager.SerializeInner(input.currency_conversion, stream, typeof(PayPal.Api.CurrencyConversion));
            Orleans.Serialization.SerializationManager.SerializeInner(input.funding_sources, stream, typeof(System.Collections.Generic.List<PayPal.Api.FundingSource>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.installment_info, stream, typeof(PayPal.Api.InstallmentInfo));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.FundingOption result = new PayPal.Api.FundingOption();
            result.backup_funding_instrument = ((PayPal.Api.FundingInstrument)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.FundingInstrument), stream)));
            result.currency_conversion = ((PayPal.Api.CurrencyConversion)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.CurrencyConversion), stream)));
            result.funding_sources = ((System.Collections.Generic.List<PayPal.Api.FundingSource>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.FundingSource>), stream)));
            result.id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.installment_info = ((PayPal.Api.InstallmentInfo)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.InstallmentInfo), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.FundingOption), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_InstallmentInfoSerialization
    {
        
        static PayPal_Api_InstallmentInfoSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.InstallmentInfo input = ((PayPal.Api.InstallmentInfo)(original));
            PayPal.Api.InstallmentInfo result = new PayPal.Api.InstallmentInfo();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.installment_id = input.installment_id;
            result.installment_options = ((System.Collections.Generic.List<PayPal.Api.InstallmentOption>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.installment_options)));
            result.issuer = input.issuer;
            result.network = input.network;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.InstallmentInfo input = ((PayPal.Api.InstallmentInfo)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.installment_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.installment_options, stream, typeof(System.Collections.Generic.List<PayPal.Api.InstallmentOption>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.issuer, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.network, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.InstallmentInfo result = new PayPal.Api.InstallmentInfo();
            result.installment_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.installment_options = ((System.Collections.Generic.List<PayPal.Api.InstallmentOption>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.InstallmentOption>), stream)));
            result.issuer = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.network = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.InstallmentInfo), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_InstallmentOptionSerialization
    {
        
        static PayPal_Api_InstallmentOptionSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.InstallmentOption input = ((PayPal.Api.InstallmentOption)(original));
            PayPal.Api.InstallmentOption result = new PayPal.Api.InstallmentOption();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.discount_amount = ((PayPal.Api.Currency)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.discount_amount)));
            result.discount_percentage = input.discount_percentage;
            result.monthly_payment = ((PayPal.Api.Currency)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.monthly_payment)));
            result.term = input.term;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.InstallmentOption input = ((PayPal.Api.InstallmentOption)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.discount_amount, stream, typeof(PayPal.Api.Currency));
            Orleans.Serialization.SerializationManager.SerializeInner(input.discount_percentage, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.monthly_payment, stream, typeof(PayPal.Api.Currency));
            Orleans.Serialization.SerializationManager.SerializeInner(input.term, stream, typeof(int));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.InstallmentOption result = new PayPal.Api.InstallmentOption();
            result.discount_amount = ((PayPal.Api.Currency)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Currency), stream)));
            result.discount_percentage = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.monthly_payment = ((PayPal.Api.Currency)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Currency), stream)));
            result.term = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.InstallmentOption), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_FundingSourceSerialization
    {
        
        static PayPal_Api_FundingSourceSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.FundingSource input = ((PayPal.Api.FundingSource)(original));
            PayPal.Api.FundingSource result = new PayPal.Api.FundingSource();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.additional_text = input.additional_text;
            result.amount = ((PayPal.Api.Currency)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.amount)));
            result.extends = ((PayPal.Api.FundingInstrument)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.extends)));
            result.funding_detail = ((PayPal.Api.FundingDetail)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.funding_detail)));
            result.funding_instrument_type = input.funding_instrument_type;
            result.funding_mode = input.funding_mode;
            result.legal_text = input.legal_text;
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            result.soft_descriptor = input.soft_descriptor;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.FundingSource input = ((PayPal.Api.FundingSource)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.additional_text, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.amount, stream, typeof(PayPal.Api.Currency));
            Orleans.Serialization.SerializationManager.SerializeInner(input.extends, stream, typeof(PayPal.Api.FundingInstrument));
            Orleans.Serialization.SerializationManager.SerializeInner(input.funding_detail, stream, typeof(PayPal.Api.FundingDetail));
            Orleans.Serialization.SerializationManager.SerializeInner(input.funding_instrument_type, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.funding_mode, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.legal_text, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.soft_descriptor, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.FundingSource result = new PayPal.Api.FundingSource();
            result.additional_text = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.amount = ((PayPal.Api.Currency)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Currency), stream)));
            result.extends = ((PayPal.Api.FundingInstrument)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.FundingInstrument), stream)));
            result.funding_detail = ((PayPal.Api.FundingDetail)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.FundingDetail), stream)));
            result.funding_instrument_type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.funding_mode = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.legal_text = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            result.soft_descriptor = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.FundingSource), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_FundingDetailSerialization
    {
        
        static PayPal_Api_FundingDetailSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.FundingDetail input = ((PayPal.Api.FundingDetail)(original));
            PayPal.Api.FundingDetail result = new PayPal.Api.FundingDetail();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.clearing_time = input.clearing_time;
            result.payment_hold_date = input.payment_hold_date;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.FundingDetail input = ((PayPal.Api.FundingDetail)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.clearing_time, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payment_hold_date, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.FundingDetail result = new PayPal.Api.FundingDetail();
            result.clearing_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.payment_hold_date = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.FundingDetail), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_CurrencyConversionSerialization
    {
        
        static PayPal_Api_CurrencyConversionSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.CurrencyConversion input = ((PayPal.Api.CurrencyConversion)(original));
            PayPal.Api.CurrencyConversion result = new PayPal.Api.CurrencyConversion();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.conversion_date = input.conversion_date;
            result.conversion_type = input.conversion_type;
            result.conversion_type_changeable = ((System.Nullable<System.Boolean>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.conversion_type_changeable)));
            result.from_amount = input.from_amount;
            result.from_currency = input.from_currency;
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            result.to_amount = input.to_amount;
            result.to_currency = input.to_currency;
            result.web_url = input.web_url;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.CurrencyConversion input = ((PayPal.Api.CurrencyConversion)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.conversion_date, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.conversion_type, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.conversion_type_changeable, stream, typeof(System.Nullable<System.Boolean>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.from_amount, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.from_currency, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.to_amount, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.to_currency, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.web_url, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.CurrencyConversion result = new PayPal.Api.CurrencyConversion();
            result.conversion_date = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.conversion_type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.conversion_type_changeable = ((System.Nullable<System.Boolean>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.Boolean>), stream)));
            result.from_amount = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.from_currency = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            result.to_amount = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.to_currency = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.web_url = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.CurrencyConversion), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_FundingInstrumentSerialization
    {
        
        static PayPal_Api_FundingInstrumentSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.FundingInstrument input = ((PayPal.Api.FundingInstrument)(original));
            PayPal.Api.FundingInstrument result = new PayPal.Api.FundingInstrument();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.bank_account = ((PayPal.Api.ExtendedBankAccount)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.bank_account)));
            result.bank_account_token = ((PayPal.Api.BankToken)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.bank_account_token)));
            result.carrier_account_token = ((PayPal.Api.CarrierAccountToken)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.carrier_account_token)));
            result.credit = ((PayPal.Api.Credit)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.credit)));
            result.credit_card = ((PayPal.Api.CreditCard)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.credit_card)));
            result.credit_card_token = ((PayPal.Api.CreditCardToken)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.credit_card_token)));
            result.incentive = ((PayPal.Api.Incentive)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.incentive)));
            result.payment_card = ((PayPal.Api.PaymentCard)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.payment_card)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.FundingInstrument input = ((PayPal.Api.FundingInstrument)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.bank_account, stream, typeof(PayPal.Api.ExtendedBankAccount));
            Orleans.Serialization.SerializationManager.SerializeInner(input.bank_account_token, stream, typeof(PayPal.Api.BankToken));
            Orleans.Serialization.SerializationManager.SerializeInner(input.carrier_account_token, stream, typeof(PayPal.Api.CarrierAccountToken));
            Orleans.Serialization.SerializationManager.SerializeInner(input.credit, stream, typeof(PayPal.Api.Credit));
            Orleans.Serialization.SerializationManager.SerializeInner(input.credit_card, stream, typeof(PayPal.Api.CreditCard));
            Orleans.Serialization.SerializationManager.SerializeInner(input.credit_card_token, stream, typeof(PayPal.Api.CreditCardToken));
            Orleans.Serialization.SerializationManager.SerializeInner(input.incentive, stream, typeof(PayPal.Api.Incentive));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payment_card, stream, typeof(PayPal.Api.PaymentCard));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.FundingInstrument result = new PayPal.Api.FundingInstrument();
            result.bank_account = ((PayPal.Api.ExtendedBankAccount)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.ExtendedBankAccount), stream)));
            result.bank_account_token = ((PayPal.Api.BankToken)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.BankToken), stream)));
            result.carrier_account_token = ((PayPal.Api.CarrierAccountToken)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.CarrierAccountToken), stream)));
            result.credit = ((PayPal.Api.Credit)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Credit), stream)));
            result.credit_card = ((PayPal.Api.CreditCard)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.CreditCard), stream)));
            result.credit_card_token = ((PayPal.Api.CreditCardToken)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.CreditCardToken), stream)));
            result.incentive = ((PayPal.Api.Incentive)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Incentive), stream)));
            result.payment_card = ((PayPal.Api.PaymentCard)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.PaymentCard), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.FundingInstrument), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_PaymentCardSerialization
    {
        
        static PayPal_Api_PaymentCardSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.PaymentCard input = ((PayPal.Api.PaymentCard)(original));
            PayPal.Api.PaymentCard result = new PayPal.Api.PaymentCard();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.billing_address = ((PayPal.Api.Address)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.billing_address)));
            result.billing_country = input.billing_country;
            result.cvv2 = input.cvv2;
            result.expire_month = input.expire_month;
            result.expire_year = input.expire_year;
            result.external_customer_id = input.external_customer_id;
            result.first_name = input.first_name;
            result.id = input.id;
            result.last_name = input.last_name;
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            result.number = input.number;
            result.start_month = input.start_month;
            result.start_year = input.start_year;
            result.status = input.status;
            result.type = input.type;
            result.valid_until = input.valid_until;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.PaymentCard input = ((PayPal.Api.PaymentCard)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.billing_address, stream, typeof(PayPal.Api.Address));
            Orleans.Serialization.SerializationManager.SerializeInner(input.billing_country, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.cvv2, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.expire_month, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.expire_year, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.external_customer_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.first_name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.last_name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.number, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.start_month, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.start_year, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.status, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.type, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.valid_until, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.PaymentCard result = new PayPal.Api.PaymentCard();
            result.billing_address = ((PayPal.Api.Address)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Address), stream)));
            result.billing_country = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.cvv2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.expire_month = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.expire_year = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.external_customer_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.first_name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.last_name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            result.number = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.start_month = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.start_year = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.status = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.valid_until = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.PaymentCard), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_IncentiveSerialization
    {
        
        static PayPal_Api_IncentiveSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Incentive input = ((PayPal.Api.Incentive)(original));
            PayPal.Api.Incentive result = new PayPal.Api.Incentive();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.code = input.code;
            result.description = input.description;
            result.expiry_date = input.expiry_date;
            result.id = input.id;
            result.logo_image_url = input.logo_image_url;
            result.minimum_purchase_amount = ((PayPal.Api.Currency)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.minimum_purchase_amount)));
            result.name = input.name;
            result.terms = input.terms;
            result.type = input.type;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Incentive input = ((PayPal.Api.Incentive)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.code, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.description, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.expiry_date, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.logo_image_url, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.minimum_purchase_amount, stream, typeof(PayPal.Api.Currency));
            Orleans.Serialization.SerializationManager.SerializeInner(input.name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.terms, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.type, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Incentive result = new PayPal.Api.Incentive();
            result.code = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.description = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.expiry_date = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.logo_image_url = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.minimum_purchase_amount = ((PayPal.Api.Currency)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Currency), stream)));
            result.name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.terms = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Incentive), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_CreditCardTokenSerialization
    {
        
        static PayPal_Api_CreditCardTokenSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.CreditCardToken input = ((PayPal.Api.CreditCardToken)(original));
            PayPal.Api.CreditCardToken result = new PayPal.Api.CreditCardToken();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.credit_card_id = input.credit_card_id;
            result.expire_month = input.expire_month;
            result.expire_year = input.expire_year;
            result.last4 = input.last4;
            result.payer_id = input.payer_id;
            result.type = input.type;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.CreditCardToken input = ((PayPal.Api.CreditCardToken)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.credit_card_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.expire_month, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.expire_year, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.last4, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payer_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.type, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.CreditCardToken result = new PayPal.Api.CreditCardToken();
            result.credit_card_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.expire_month = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.expire_year = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.last4 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.payer_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.CreditCardToken), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_CreditCardSerialization
    {
        
        static PayPal_Api_CreditCardSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.CreditCard input = ((PayPal.Api.CreditCard)(original));
            PayPal.Api.CreditCard result = new PayPal.Api.CreditCard();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.billing_address = ((PayPal.Api.Address)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.billing_address)));
            result.create_time = input.create_time;
            result.cvv2 = input.cvv2;
            result.expire_month = input.expire_month;
            result.expire_year = input.expire_year;
            result.external_card_id = input.external_card_id;
            result.external_customer_id = input.external_customer_id;
            result.first_name = input.first_name;
            result.id = input.id;
            result.last_name = input.last_name;
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            result.merchant_id = input.merchant_id;
            result.number = input.number;
            result.payer_id = input.payer_id;
            result.state = input.state;
            result.type = input.type;
            result.update_time = input.update_time;
            result.valid_until = input.valid_until;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.CreditCard input = ((PayPal.Api.CreditCard)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.billing_address, stream, typeof(PayPal.Api.Address));
            Orleans.Serialization.SerializationManager.SerializeInner(input.create_time, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.cvv2, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.expire_month, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.expire_year, stream, typeof(int));
            Orleans.Serialization.SerializationManager.SerializeInner(input.external_card_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.external_customer_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.first_name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.last_name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.merchant_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.number, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payer_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.state, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.type, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.update_time, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.valid_until, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.CreditCard result = new PayPal.Api.CreditCard();
            result.billing_address = ((PayPal.Api.Address)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Address), stream)));
            result.create_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.cvv2 = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.expire_month = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.expire_year = ((int)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(int), stream)));
            result.external_card_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.external_customer_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.first_name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.last_name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            result.merchant_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.number = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.payer_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.state = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.update_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.valid_until = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.CreditCard), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_CreditSerialization
    {
        
        static PayPal_Api_CreditSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Credit input = ((PayPal.Api.Credit)(original));
            PayPal.Api.Credit result = new PayPal.Api.Credit();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.id = input.id;
            result.type = input.type;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Credit input = ((PayPal.Api.Credit)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.type, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Credit result = new PayPal.Api.Credit();
            result.id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Credit), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_CarrierAccountTokenSerialization
    {
        
        static PayPal_Api_CarrierAccountTokenSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.CarrierAccountToken input = ((PayPal.Api.CarrierAccountToken)(original));
            PayPal.Api.CarrierAccountToken result = new PayPal.Api.CarrierAccountToken();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.carrier_account_id = input.carrier_account_id;
            result.external_customer_id = input.external_customer_id;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.CarrierAccountToken input = ((PayPal.Api.CarrierAccountToken)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.carrier_account_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.external_customer_id, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.CarrierAccountToken result = new PayPal.Api.CarrierAccountToken();
            result.carrier_account_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.external_customer_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.CarrierAccountToken), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_BankTokenSerialization
    {
        
        static PayPal_Api_BankTokenSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.BankToken input = ((PayPal.Api.BankToken)(original));
            PayPal.Api.BankToken result = new PayPal.Api.BankToken();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.bank_id = input.bank_id;
            result.external_customer_id = input.external_customer_id;
            result.mandate_reference_number = input.mandate_reference_number;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.BankToken input = ((PayPal.Api.BankToken)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.bank_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.external_customer_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.mandate_reference_number, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.BankToken result = new PayPal.Api.BankToken();
            result.bank_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.external_customer_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.mandate_reference_number = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.BankToken), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_ExtendedBankAccountSerialization
    {
        
        static PayPal_Api_ExtendedBankAccountSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.ExtendedBankAccount input = ((PayPal.Api.ExtendedBankAccount)(original));
            PayPal.Api.ExtendedBankAccount result = new PayPal.Api.ExtendedBankAccount();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.account_name = input.account_name;
            result.account_number = input.account_number;
            result.account_number_type = input.account_number_type;
            result.account_type = input.account_type;
            result.auth_capture_timestamp = input.auth_capture_timestamp;
            result.auth_type = input.auth_type;
            result.bank_name = input.bank_name;
            result.billing_address = ((PayPal.Api.Address)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.billing_address)));
            result.birth_date = input.birth_date;
            result.check_type = input.check_type;
            result.confirmation_status = input.confirmation_status;
            result.country_code = input.country_code;
            result.create_time = input.create_time;
            result.external_account_id = input.external_account_id;
            result.external_customer_id = input.external_customer_id;
            result.first_name = input.first_name;
            result.id = input.id;
            result.last_name = input.last_name;
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            result.mandate_reference_number = input.mandate_reference_number;
            result.merchant_id = input.merchant_id;
            result.payer_id = input.payer_id;
            result.routing_number = input.routing_number;
            result.state = input.state;
            result.update_time = input.update_time;
            result.valid_until = input.valid_until;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.ExtendedBankAccount input = ((PayPal.Api.ExtendedBankAccount)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.account_name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.account_number, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.account_number_type, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.account_type, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.auth_capture_timestamp, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.auth_type, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.bank_name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.billing_address, stream, typeof(PayPal.Api.Address));
            Orleans.Serialization.SerializationManager.SerializeInner(input.birth_date, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.check_type, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.confirmation_status, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.country_code, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.create_time, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.external_account_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.external_customer_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.first_name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.last_name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.mandate_reference_number, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.merchant_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.payer_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.routing_number, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.state, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.update_time, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.valid_until, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.ExtendedBankAccount result = new PayPal.Api.ExtendedBankAccount();
            result.account_name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.account_number = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.account_number_type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.account_type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.auth_capture_timestamp = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.auth_type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.bank_name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.billing_address = ((PayPal.Api.Address)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Address), stream)));
            result.birth_date = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.check_type = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.confirmation_status = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.country_code = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.create_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.external_account_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.external_customer_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.first_name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.last_name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            result.mandate_reference_number = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.merchant_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.payer_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.routing_number = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.state = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.update_time = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.valid_until = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.ExtendedBankAccount), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_PayeeSerialization
    {
        
        static PayPal_Api_PayeeSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Payee input = ((PayPal.Api.Payee)(original));
            PayPal.Api.Payee result = new PayPal.Api.Payee();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.email = input.email;
            result.merchant_id = input.merchant_id;
            result.phone = ((PayPal.Api.Phone)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.phone)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Payee input = ((PayPal.Api.Payee)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.email, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.merchant_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.phone, stream, typeof(PayPal.Api.Phone));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Payee result = new PayPal.Api.Payee();
            result.email = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.merchant_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.phone = ((PayPal.Api.Phone)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.Phone), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Payee), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_PhoneSerialization
    {
        
        static PayPal_Api_PhoneSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Phone input = ((PayPal.Api.Phone)(original));
            PayPal.Api.Phone result = new PayPal.Api.Phone();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.country_code = input.country_code;
            result.extension = input.extension;
            result.national_number = input.national_number;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Phone input = ((PayPal.Api.Phone)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.country_code, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.extension, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.national_number, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Phone result = new PayPal.Api.Phone();
            result.country_code = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.extension = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.national_number = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Phone), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_LinksSerialization
    {
        
        static PayPal_Api_LinksSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Links input = ((PayPal.Api.Links)(original));
            PayPal.Api.Links result = new PayPal.Api.Links();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.enctype = input.enctype;
            result.href = input.href;
            result.method = input.method;
            result.rel = input.rel;
            result.schema = ((PayPal.Api.HyperSchema)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.schema)));
            result.targetSchema = ((PayPal.Api.HyperSchema)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.targetSchema)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Links input = ((PayPal.Api.Links)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.enctype, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.href, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.method, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.rel, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.schema, stream, typeof(PayPal.Api.HyperSchema));
            Orleans.Serialization.SerializationManager.SerializeInner(input.targetSchema, stream, typeof(PayPal.Api.HyperSchema));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Links result = new PayPal.Api.Links();
            result.enctype = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.href = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.method = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.rel = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.schema = ((PayPal.Api.HyperSchema)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.HyperSchema), stream)));
            result.targetSchema = ((PayPal.Api.HyperSchema)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(PayPal.Api.HyperSchema), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Links), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_HyperSchemaSerialization
    {
        
        static PayPal_Api_HyperSchemaSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.HyperSchema input = ((PayPal.Api.HyperSchema)(original));
            PayPal.Api.HyperSchema result = new PayPal.Api.HyperSchema();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.contentEncoding = input.contentEncoding;
            result.fragmentResolution = input.fragmentResolution;
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            result.mediaType = input.mediaType;
            result.pathStart = input.pathStart;
            result.readOnly = ((System.Nullable<System.Boolean>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.readOnly)));
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.HyperSchema input = ((PayPal.Api.HyperSchema)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.contentEncoding, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.fragmentResolution, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.mediaType, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.pathStart, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.readOnly, stream, typeof(System.Nullable<System.Boolean>));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.HyperSchema result = new PayPal.Api.HyperSchema();
            result.contentEncoding = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.fragmentResolution = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            result.mediaType = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.pathStart = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.readOnly = ((System.Nullable<System.Boolean>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Nullable<System.Boolean>), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.HyperSchema), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_ErrorSerialization
    {
        
        static PayPal_Api_ErrorSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.Error input = ((PayPal.Api.Error)(original));
            PayPal.Api.Error result = new PayPal.Api.Error();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.code = input.code;
            result.debug_id = input.debug_id;
            result.details = ((System.Collections.Generic.List<PayPal.Api.ErrorDetails>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.details)));
            result.information_link = input.information_link;
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.links)));
            result.message = input.message;
            result.name = input.name;
            result.purchase_unit_reference_id = input.purchase_unit_reference_id;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.Error input = ((PayPal.Api.Error)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.code, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.debug_id, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.details, stream, typeof(System.Collections.Generic.List<PayPal.Api.ErrorDetails>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.information_link, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.links, stream, typeof(System.Collections.Generic.List<PayPal.Api.Links>));
            Orleans.Serialization.SerializationManager.SerializeInner(input.message, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.name, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.purchase_unit_reference_id, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.Error result = new PayPal.Api.Error();
            result.code = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.debug_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.details = ((System.Collections.Generic.List<PayPal.Api.ErrorDetails>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.ErrorDetails>), stream)));
            result.information_link = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.links = ((System.Collections.Generic.List<PayPal.Api.Links>)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(System.Collections.Generic.List<PayPal.Api.Links>), stream)));
            result.message = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.name = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.purchase_unit_reference_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.Error), DeepCopier, Serializer, Deserializer);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.0.0")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [global::Orleans.CodeGeneration.RegisterSerializerAttribute()]
    internal class PayPal_Api_ErrorDetailsSerialization
    {
        
        static PayPal_Api_ErrorDetailsSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            PayPal.Api.ErrorDetails input = ((PayPal.Api.ErrorDetails)(original));
            PayPal.Api.ErrorDetails result = new PayPal.Api.ErrorDetails();
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            result.code = input.code;
            result.field = input.field;
            result.issue = input.issue;
            result.purchase_unit_reference_id = input.purchase_unit_reference_id;
            return result;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            PayPal.Api.ErrorDetails input = ((PayPal.Api.ErrorDetails)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.code, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.field, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.issue, stream, typeof(string));
            Orleans.Serialization.SerializationManager.SerializeInner(input.purchase_unit_reference_id, stream, typeof(string));
        }
        
        public static object Deserializer(System.Type expected, global::Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            PayPal.Api.ErrorDetails result = new PayPal.Api.ErrorDetails();
            result.code = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.field = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.issue = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            result.purchase_unit_reference_id = ((string)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(string), stream)));
            return result;
        }
        
        public static void Register()
        {
            global::Orleans.Serialization.SerializationManager.Register(typeof(PayPal.Api.ErrorDetails), DeepCopier, Serializer, Deserializer);
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
